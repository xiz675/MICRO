"""
This module provides all the functions to correct the edge directions in the workloads generated by llm.
For example Person<-[study_at]-Univ. will be modified to Person-[study_at]->Univ.
"""
from utils.llm_correction_util import categorize_queries
from utils.neo4jutils import Neo4jUtil

if __name__ == '__main__':
    # define Neo4j connections
    uri = "bolt://localhost:7687"
    user = "neo4j"
    db_name = "test"
    password = "1996AHtc!"
    neo4j_util = Neo4jUtil(uri, user, password, db_name)
    # define relationship types and node pairs for each type
    # define replaceable node types
    # queries = read_and_process_llm_queries(queries_file)
    # with open(output_prefix + 'clean_llm.cypher', 'w') as file:
    #     file.write(';\n'.join(queries))
    path_prefix = r"C:/Users/sauzh/Documents/Work/crossmodel/workloads-realdata/"
    query_path = "clean_llm.cypher"
    with open(path_prefix + query_path, 'r') as file:
        cypher_str = file.read()
    queries = cypher_str.split(";")
    relationship_map = {
        "IS_PART_OF": {("Country", "Continent"), ("City", "Country")},
        "IS_SUBCLASS_OF": {("TagClass", "TagClass")},
        "IS_LOCATED_IN": {("Company", "Country"), ("Message", "Country"), ("Person", "City"), ("University", "City")},
        "HAS_TYPE": {("Tag", "TagClass")},
        "CONTAINER_OF": {("Forum", "Post")},
        "HAS_MEMBER": {("Forum", "Person")},
        "HAS_MODERATOR": {("Forum", "Person")},
        "HAS_INTEREST": {("Person", "Tag")},
        "HAS_CREATOR": {("Comment", "Person"), ("Post", "Person")},
        "REPLY_OF": {("Comment", "Comment"), ("Comment", "Post")},
        "HAS_TAG": {("Forum", "Tag"), ("Comment", "Tag"), ("Post", "Tag")},
        "STUDY_AT": {("Person", "University")},
        "WORK_AT": {("Person", "Company")},
        "KNOWS": {("Person", "Person")},
        "LIKES": {("Person", "Comment"), ("Person", "Post")}
    }
    categorize_queries(neo4j_util, queries, relationship_map, path_prefix)

