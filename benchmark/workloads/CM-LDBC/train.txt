MATCH (comment:Comment1)-[:REPLY_OF*]->(message:Message1)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, comment.id as commentid
**********
select neo4j.commentid, Person0.lastName, Person0.firstName, Comment0.content
from neo4j,Person Person0, Comment Comment0
where Person0.locationIP = $param and Comment0.creationDate < $param and neo4j.creatorid = Person0.id and neo4j.commentid = Comment0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message1)-[:REPLY_OF]->(c:Comment2)

RETURN m.id as mid, c.id as cid, p.id as pid, t.id as tid
**********
select Message0.content, Person0.lastName, Comment0.content, Person0.firstName
from neo4j,Message Message0, Comment Comment0, Person Person0, Tag Tag0
where Tag0.name = $param and Person0.speaks = $param and neo4j.mid = Message0.id and neo4j.cid = Comment0.id and neo4j.pid = Person0.id and neo4j.tid = Tag0.id
##########
MATCH (f:Forum2)-[:CONTAINER_OF]->(m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN t.id as tid, tc.id as tcid, f.id as fid, m.id as mid
**********
select Message0.content, Message0.creationDate, Tag0.name
from neo4j,Forum Forum0, TagClass TagClass0, Message Message0, Tag Tag0
where Forum0.title = $param and TagClass0.name = $param and neo4j.fid = Forum0.id and neo4j.tcid = TagClass0.id and neo4j.mid = Message0.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:LIKES]->(m:Message1)-[:HAS_CREATOR]->(creator:Person)

RETURN friend.id as friendid, m.id as mid, creator.id as creatorid, p.id as pid
**********
select Person2.firstName, Person1.lastName, Person1.firstName, Message0.content, Person2.lastName
from neo4j,Person Person0, Person Person1, Message Message0, Person Person2
where Person0.birthday < $param and Person1.gender = $param and neo4j.pid = Person0.id and neo4j.friendid = Person1.id and neo4j.mid = Message0.id and neo4j.creatorid = Person2.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(m:Message1)-[:HAS_CREATOR]->(creator:Person)-[:LIKES]->(c2:Comment2)

RETURN c2.id as c2id, creator.id as creatorid, c.id as cid, m.id as mid
**********
select Message0.content, Person0.lastName, Person0.firstName, Comment1.content
from neo4j,Message Message0, Comment Comment0, Person Person0, Comment Comment1
where Comment0.content CONTAINS $param and Message0.creationDate > $param and neo4j.mid = Message0.id and neo4j.c2id = Comment0.id and neo4j.creatorid = Person0.id and neo4j.cid = Comment1.id
##########
MATCH (forum:Forum)-[:CONTAINER_OF]->(post:Post1)-[:HAS_TAG]->(tag:Tag)

RETURN post.id as postid, forum.id as forumid, tag.id as tagid
**********
select Forum0.creationDate, neo4j.postid, Post0.content
from neo4j,Tag Tag0, Post Post0, Forum Forum0
where Forum0.title = $param and Tag0.name = $param and neo4j.tagid = Tag0.id and neo4j.postid = Post0.id and neo4j.forumid = Forum0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:HAS_INTEREST]->(t:Tag)
RETURN friend.id as friendid, p.id as pid, t.id as tid
**********
select Person0.lastName, Person1.firstName, Person0.firstName, Tag0.name, Person1.lastName
from neo4j,Tag Tag0, Person Person0, Person Person1
where Tag0.name = $param and neo4j.tid = Tag0.id and neo4j.friendid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (c:Comment2)-[:REPLY_OF]->(m:Message1)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)
RETURN m.id as mid, c.id as cid, tc.id as tcid, t.id as tid
**********
select neo4j.cid, Comment0.content, Tag0.name, TagClass0.name, neo4j.mid, Message0.content
from neo4j,Message Message0, Tag Tag0, Comment Comment0, TagClass TagClass0
where TagClass0.name = $param and neo4j.mid = Message0.id and neo4j.tid = Tag0.id and neo4j.cid = Comment0.id and neo4j.tcid = TagClass0.id
##########
MATCH (p:Person1)-[:LIKES]->(m:Message2)-[:HAS_CREATOR]->(creator:Person)-[:WORK_AT]->(o:Organisation)

RETURN o.id as oid, creator.id as creatorid, m.id as mid
**********
select Organisation0.name, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Person Person0, Organisation Organisation0
where Organisation0.name = $param and Message0.creationDate > $param and neo4j.mid = Message0.id and neo4j.creatorid = Person0.id and neo4j.oid = Organisation0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(pl:Place)<-[:IS_LOCATED_IN]-(o:Organisation)

RETURN o.id as oid, pl.id as plid, c.id as cid, p.id as pid
**********
select Organisation0.name, Company0.name, Person0.firstName
from neo4j,Organisation Organisation0, Place Place0, Person Person0, Company Company0
where Place0.name = $param and Person0.birthday < $param and neo4j.oid = Organisation0.id and neo4j.plid = Place0.id and neo4j.pid = Person0.id and neo4j.cid = Company0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message2)<-[:CONTAINER_OF]-(f:Forum1)

RETURN p.id as pid, f.id as fid, m.id as mid
**********
select Forum0.title, Message0.content, Message0.creationDate
from neo4j,Message Message0, Person Person0, Forum Forum0
where Person0.email = $param and Forum0.creationDate > $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person)-[:KNOWS]->(friend:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(city:City)

RETURN friend.id as friendid, org.id as orgid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, Person1.lastName, Person0.firstName, Person1.firstName, Person0.lastName
from neo4j,City City0, Organisation Organisation0, Person Person0, Person Person1
where Person0.birthday < $param and City0.name = $param and neo4j.cityid = City0.id and neo4j.orgid = Organisation0.id and neo4j.pid = Person0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN friend.id as friendid, tc.id as tcid, p.id as pid, t.id as tid
**********
select Person0.lastName, Person1.firstName, Person0.firstName, Tag0.name, Person1.lastName
from neo4j,Person Person0, Person Person1, Tag Tag0, TagClass TagClass0
where TagClass0.name = $param and Person1.gender = $param and neo4j.friendid = Person0.id and neo4j.pid = Person1.id and neo4j.tid = Tag0.id and neo4j.tcid = TagClass0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:LIKES]->(comment:Comment2)-[:REPLY_OF]->(post:Post1)
WHERE post.title CONTAINS $param
RETURN friend.id as friendid, comment.id as commentid, post.id as postid, p.id as pid
**********
select Person0.lastName, Person1.firstName, neo4j.commentid, Person0.firstName, neo4j.postid, Person1.lastName
from neo4j,Person Person0, Person Person1
where Person1.speaks CONTAINS $param and neo4j.friendid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(msg:Message2)-[:HAS_CREATOR]->(p:Person1)

RETURN org.id as orgid, place.id as placeid, msg.id as msgid, p.id as pid
**********
select Organisation0.name, Message0.content, Person0.firstName, Place0.name, Person0.lastName
from neo4j,Place Place0, Person Person0, Message Message0, Organisation Organisation0
where Message0.length > $param and Organisation0.name = $param and neo4j.placeid = Place0.id and neo4j.pid = Person0.id and neo4j.msgid = Message0.id and neo4j.orgid = Organisation0.id
##########
MATCH (tc:TagClass)<-[:HAS_TYPE]-(tag:Tag)<-[:HAS_TAG]-(msg:Message2)-[:REPLY_OF]->(comment:Comment2)

RETURN comment.id as commentid, msg.id as msgid, tc.id as tcid, tag.id as tagid
**********
select Message0.content, TagClass0.name, Tag0.name, Comment0.content
from neo4j,TagClass TagClass0, Tag Tag0, Comment Comment0, Message Message0
where TagClass0.name = $param and Comment0.creationDate < $param and neo4j.tcid = TagClass0.id and neo4j.tagid = Tag0.id and neo4j.commentid = Comment0.id and neo4j.msgid = Message0.id
##########
MATCH (p:Person1)-[:LIKES]->(msg:Message1)<-[:REPLY_OF]-(c:Comment1)-[:HAS_CREATOR]->(creator:Person)

RETURN creator.id as creatorid, msg.id as msgid, c.id as cid, p.id as pid
**********
select Message0.content, Comment0.content, Person1.firstName, Person0.firstName
from neo4j,Message Message0, Person Person0, Person Person1, Comment Comment0
where Person1.gender = $param and Message0.creationDate > date($param) and neo4j.msgid = Message0.id and neo4j.pid = Person0.id and neo4j.creatorid = Person1.id and neo4j.cid = Comment0.id
##########
MATCH (org:Organisation)<-[:WORK_AT]-(p:Person)-[:IS_LOCATED_IN]->(city:City)

RETURN org.id as orgid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, Person0.lastName, Person0.firstName
from neo4j,City City0, Organisation Organisation0, Person Person0
where Organisation0.name = $param and City0.name = $param and neo4j.cityid = City0.id and neo4j.orgid = Organisation0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN tc.id as tcid, p.id as pid, t.id as tid
**********
select TagClass0.name, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Tag Tag0, TagClass TagClass0, Person Person0
where Person0.birthday < date($param) and TagClass0.name = $param and neo4j.tid = Tag0.id and neo4j.tcid = TagClass0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN c.id as cid, country.id as countryid, p.id as pid
**********
select Country0.name, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Country Country0, Company Company0, Person Person0
where Country0.name = $param and Person0.gender = $param and neo4j.countryid = Country0.id and neo4j.cid = Company0.id and neo4j.pid = Person0.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(p:Post1)-[:HAS_TAG]->(t:Tag)<-[:HAS_TAG]-(c:Comment1)

RETURN c.id as cid, p.id as pid, f.id as fid, t.id as tid
**********
select Forum0.title, Tag0.name, Post0.content, Comment0.content
from neo4j,Tag Tag0, Comment Comment0, Forum Forum0, Post Post0
where Forum0.title = $param and Tag0.name = $param and neo4j.tid = Tag0.id and neo4j.cid = Comment0.id and neo4j.fid = Forum0.id and neo4j.pid = Post0.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(m:Message1)-[:HAS_CREATOR]->(p:Person1)

RETURN c.id as cid, p.id as pid, m.id as mid
**********
select Person0.firstName, Message0.content, Person0.lastName, Comment0.content
from neo4j,Person Person0, Comment Comment0, Message Message0
where Comment0.creationDate > $param and Person0.browserUsed = $param and neo4j.pid = Person0.id and neo4j.cid = Comment0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message2)<-[:CONTAINER_OF]-(f:Forum)

RETURN m.id as mid, p.id as pid, f.id as fid, t.id as tid
**********
select Forum0.title, Message0.content, Person0.lastName, Person0.firstName
from neo4j,Tag Tag0, Person Person0, Forum Forum0, Message Message0
where Tag0.name = $param and Person0.birthday > $param and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.fid = Forum0.id and neo4j.mid = Message0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person1)-[:LIKES]->(c:Comment1)-[:REPLY_OF]->(m:Message1)<-[:CONTAINER_OF]-(f)

RETURN c.id as cid, p.id as pid, f.id as fid, m.id as mid
**********
select Message0.content, Person0.lastName, Comment0.content, Person0.firstName
from neo4j,Forum Forum0, Message Message0, Comment Comment0, Person Person0
where Forum0.title = $param and Comment0.length > $param and neo4j.fid = Forum0.id and neo4j.mid = Message0.id and neo4j.cid = Comment0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message2)<-[:REPLY_OF]-(c:Comment2)

RETURN t.id as tid, c.id as cid, p.id as pid, m.id as mid
**********
select Comment0.content, Person0.firstName, Tag0.name, Message0.content, Person0.lastName
from neo4j,Tag Tag0, Message Message0, Comment Comment0, Person Person0
where Person0.birthday < $param and Message0.length > $param and neo4j.tid = Tag0.id and neo4j.mid = Message0.id and neo4j.cid = Comment0.id and neo4j.pid = Person0.id
##########
MATCH (p1:Person1)-[:KNOWS]->(p2:Person)-[:WORK_AT]->(o:Organisation)-[:IS_LOCATED_IN]->(c:Country)

RETURN o.id as oid, p1.id as p1id, p2.id as p2id, c.id as cid
**********
select Person0.firstName, Organisation0.name, Person1.lastName, Country0.name, Person0.lastName, Person1.firstName
from neo4j,Person Person0, Country Country0, Person Person1, Organisation Organisation0
where Person1.speaks = $param and Country0.name = $param and neo4j.p2id = Person0.id and neo4j.cid = Country0.id and neo4j.p1id = Person1.id and neo4j.oid = Organisation0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(o:Organisation)-[:IS_LOCATED_IN]->(place:Place)-[:IS_PART_OF]->(country:Country)

RETURN o.id as oid, place.id as placeid, country.id as countryid, p.id as pid
**********
select Organisation0.name, Person0.firstName, Country0.name, Place0.name, Person0.lastName
from neo4j,Country Country0, Organisation Organisation0, Person Person0, Place Place0
where Person0.birthday > $param and Place0.name = $param and neo4j.countryid = Country0.id and neo4j.oid = Organisation0.id and neo4j.pid = Person0.id and neo4j.placeid = Place0.id
##########
MATCH (m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN t.id as tid, tc.id as tcid, m.id as mid
**********
select TagClass0.name, neo4j.mid, Message0.content, Tag0.name
from neo4j,Tag Tag0, TagClass TagClass0, Message Message0
where TagClass0.name = $param and Message0.creationDate > $param and neo4j.tid = Tag0.id and neo4j.tcid = TagClass0.id and neo4j.mid = Message0.id
##########
MATCH (c1:Comment2)-[:REPLY_OF]->(c2:Comment1)<-[:REPLY_OF]-(c3:Comment1)-[:HAS_TAG]->(t:Tag)

RETURN c2.id as c2id, c1.id as c1id, c3.id as c3id, t.id as tid
**********
select Comment0.content, Comment1.content, Comment2.content, Tag0.name
from neo4j,Comment Comment0, Comment Comment1, Comment Comment2, Tag Tag0
where Comment2.creationDate > $param and Tag0.name = $param and neo4j.c3id = Comment0.id and neo4j.c2id = Comment1.id and neo4j.c1id = Comment2.id and neo4j.tid = Tag0.id
##########
MATCH (c:Country)<-[:IS_LOCATED_IN]-(o:Organisation)<-[:WORK_AT]-(p:Person1)-[:LIKES]->(post:Post2)

RETURN o.id as oid, post.id as postid, c.id as cid, p.id as pid
**********
select Organisation0.name, Country0.name, Person0.lastName, Person0.firstName, Post0.content
from neo4j,Organisation Organisation0, Country Country0, Post Post0, Person Person0
where Country0.name = $param and Post0.browserUsed = $param and neo4j.oid = Organisation0.id and neo4j.cid = Country0.id and neo4j.postid = Post0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(c:City)-[:IS_PART_OF]->(co:Country)

RETURN u.id as uid, c.id as cid, p.id as pid, co.id as coid
**********
select City0.name, Person0.firstName, University0.name, Person0.lastName, Country0.name
from neo4j,Person Person0, Country Country0, City City0, University University0
where Country0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.coid = Country0.id and neo4j.cid = City0.id and neo4j.uid = University0.id
##########
MATCH (p:Post1)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN tc.id as tcid, p.id as pid, t.id as tid
**********
select TagClass0.name, Tag0.name, Post0.content
from neo4j,TagClass TagClass0, Tag Tag0, Post Post0
where Post0.creationDate < $param and TagClass0.name = $param and neo4j.tcid = TagClass0.id and neo4j.tid = Tag0.id and neo4j.pid = Post0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(country:Country)-[:IS_PART_OF]->(continent:Continent)

RETURN org.id as orgid, continent.id as continentid, country.id as countryid, p.id as pid
**********
select Organisation0.name, Country0.name, Person0.firstName
from neo4j,Person Person0, Continent Continent0, Organisation Organisation0, Country Country0
where Continent0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.continentid = Continent0.id and neo4j.orgid = Organisation0.id and neo4j.countryid = Country0.id
##########
MATCH (p:Person1)-[:LIKES]->(m:Message2)-[:HAS_CREATOR]->(creator:Person1)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, creator.id as creatorid, p.id as pid, m.id as mid
**********
select Message0.content, Person0.firstName, Person1.firstName
from neo4j,Person Person0, Place Place0, Person Person1, Message Message0
where Place0.name = $param and neo4j.creatorid = Person0.id and neo4j.placeid = Place0.id and neo4j.pid = Person1.id and neo4j.mid = Message0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message2)

RETURN m.id as mid, p.id as pid, t.id as tid
**********
select Message0.content, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Tag Tag0, Person Person0
where Tag0.name = $param and Person0.gender = $param and neo4j.mid = Message0.id and neo4j.tid = Tag0.id and neo4j.pid = Person0.id
##########
MATCH (f:Forum2)-[:CONTAINER_OF]->(m:Message1)-[:HAS_CREATOR]->(p:Person)

RETURN p.id as pid, f.id as fid, m.id as mid
**********
select Forum0.title, Message0.content, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Person Person0, Forum Forum0
where Forum0.title = $param and Person0.birthday < $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.fid = Forum0.id
##########
MATCH (forum:Forum2)-[:HAS_MEMBER]->(member:Person)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(place:Place)

RETURN member.id as memberid, forum.id as forumid, company.id as companyid, place.id as placeid
**********
select Forum0.title, Company0.name, Place0.name, Person0.firstName, Person0.lastName
from neo4j,Person Person0, Place Place0, Company Company0, Forum Forum0
where Company0.name = $param and Forum0.creationDate > $param and neo4j.memberid = Person0.id and neo4j.placeid = Place0.id and neo4j.companyid = Company0.id and neo4j.forumid = Forum0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person)-[:LIKES]->(m:Message2)

RETURN p.id as pid, f.id as fid, m.id as mid
**********
select Forum0.title, Message0.content, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Person Person0, Forum Forum0
where Forum0.creationDate > $param and Message0.length > $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message2)-[:IS_LOCATED_IN]->(place:Place)

RETURN t.id as tid, m.id as mid, place.id as placeid, p.id as pid
**********
select Person0.firstName, Place0.name, Tag0.name, neo4j.mid, Message0.content, neo4j.pid
from neo4j,Message Message0, Person Person0, Place Place0, Tag Tag0
where Tag0.name = $param and Place0.name = $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.placeid = Place0.id and neo4j.tid = Tag0.id
##########
MATCH (c:Comment1)-[:REPLY_OF*1..2]->(m:Message2)-[:HAS_CREATOR]->(creator:Person)

RETURN creator.id as creatorid, c.id as cid, m.id as mid
**********
select Message0.content, Person0.lastName, Person0.firstName, Comment0.content
from neo4j,Message Message0, Person Person0, Comment Comment0
where Comment0.creationDate > $param and Message0.length > $param and neo4j.mid = Message0.id and neo4j.creatorid = Person0.id and neo4j.cid = Comment0.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message2)<-[:REPLY_OF]-(c:Comment2)

RETURN m.id as mid, c.id as cid, p.id as pid, t.id as tid
**********
select Message0.content, Person0.lastName, Comment0.content, Person0.firstName
from neo4j,Message Message0, Person Person0, Comment Comment0, Tag Tag0
where Tag0.name = $param and Person0.birthday < $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.cid = Comment0.id and neo4j.tid = Tag0.id
##########
MATCH (f:Forum2)-[:CONTAINER_OF]->(post:Post2)-[:HAS_CREATOR]->(creator:Person1)<-[:KNOWS]-(friend:Person)

RETURN friend.id as friendid, creator.id as creatorid, post.id as postid, f.id as fid
**********
select Person0.firstName, Person1.lastName, Person1.firstName, Post0.content, Person0.lastName
from neo4j,Person Person0, Forum Forum0, Post Post0, Person Person1
where Forum0.title = $param and Person0.gender = $param and neo4j.creatorid = Person0.id and neo4j.fid = Forum0.id and neo4j.postid = Post0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person)-[:LIKES]->(msg:Message1)-[:HAS_CREATOR]->(creator:Person)-[:WORK_AT]->(c:Company)

RETURN creator.id as creatorid, msg.id as msgid, c.id as cid, p.id as pid
**********
select neo4j.creatorid, Company0.name, Person0.firstName, Message0.content, Person1.firstName, neo4j.msgid, neo4j.pid
from neo4j,Person Person0, Company Company0, Message Message0, Person Person1
where Message0.creationDate > $param and Company0.name = $param and neo4j.creatorid = Person0.id and neo4j.cid = Company0.id and neo4j.msgid = Message0.id and neo4j.pid = Person1.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN m.id as mid, tc.id as tcid, f.id as fid, t.id as tid
**********
select TagClass0.name, Tag0.name, neo4j.fid, Forum0.title, Message0.content, neo4j.mid
from neo4j,Tag Tag0, TagClass TagClass0, Message Message0, Forum Forum0
where Forum0.title = $param and TagClass0.name = $param and neo4j.tid = Tag0.id and neo4j.tcid = TagClass0.id and neo4j.mid = Message0.id and neo4j.fid = Forum0.id
##########
MATCH (post:Post1)<-[:CONTAINER_OF]-(forum:Forum)-[:HAS_MEMBER]->(member:Person)

RETURN member.id as memberid, forum.id as forumid, post.id as postid
**********
select Forum0.title, Person0.lastName, Post0.content, Person0.firstName
from neo4j,Person Person0, Forum Forum0, Post Post0
where Person0.speaks = $param and Forum0.title = $param and neo4j.memberid = Person0.id and neo4j.forumid = Forum0.id and neo4j.postid = Post0.id
##########
MATCH (p:Person1)-[:STUDY_AT|:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(place:Place)

RETURN org.id as orgid, place.id as placeid, p.id as pid
**********
select Organisation0.name, Person0.lastName, Place0.name, Person0.firstName
from neo4j,Organisation Organisation0, Person Person0, Place Place0
where Person0.birthday < $param and Place0.name = $param and neo4j.orgid = Organisation0.id and neo4j.pid = Person0.id and neo4j.placeid = Place0.id
##########
MATCH (forum:Forum)-[:CONTAINER_OF]->(post:Post2)<-[:REPLY_OF]-(comment:Comment2)-[:HAS_TAG]->(tag:Tag)

RETURN post.id as postid, comment.id as commentid, forum.id as forumid, tag.id as tagid
**********
select Forum0.title, Tag0.name, Post0.content, Comment0.content
from neo4j,Post Post0, Comment Comment0, Tag Tag0, Forum Forum0
where Tag0.name = $param and Forum0.creationDate > $param and neo4j.postid = Post0.id and neo4j.commentid = Comment0.id and neo4j.tagid = Tag0.id and neo4j.forumid = Forum0.id
##########
MATCH (f:Forum2)-[:HAS_MODERATOR]->(mod:Person)-[:LIKES]->(post:Post2)-[:HAS_TAG]->(tag:Tag)

RETURN mod.id as modid, tag.id as tagid, post.id as postid, f.id as fid
**********
select neo4j.modid, neo4j.postid, Tag0.name, Person0.firstName, neo4j.fid, Forum0.title, Post0.content
from neo4j,Post Post0, Tag Tag0, Forum Forum0, Person Person0
where Tag0.name = $param and Person0.birthday < $param and neo4j.postid = Post0.id and neo4j.tagid = Tag0.id and neo4j.fid = Forum0.id and neo4j.modid = Person0.id
##########
MATCH (p:Person)-[:WORK_AT]->(comp:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN country.id as countryid, p.id as pid, comp.id as compid
**********
select Country0.name, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Company Company0, Country Country0, Person Person0
where Company0.name = $param and Person0.speaks = $param and neo4j.compid = Company0.id and neo4j.countryid = Country0.id and neo4j.pid = Person0.id
##########
MATCH (c:Comment2)-[:REPLY_OF*2]-(m:Message2)-[:HAS_CREATOR]->(p:Person)

RETURN c.id as cid, p.id as pid, m.id as mid
**********
select Comment0.creationDate, Comment0.content, neo4j.cid
from neo4j,Comment Comment0, Person Person0, Message Message0
where Person0.speaks = $param and Message0.creationDate > $param and neo4j.cid = Comment0.id and neo4j.pid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)<-[:IS_SUBCLASS_OF]-(tc2:TagClass)

RETURN t.id as tid, tc2.id as tc2id, tc.id as tcid, m.id as mid
**********
select TagClass0.name, Tag0.name, TagClass1.name, neo4j.mid, Message0.content
from neo4j,TagClass TagClass0, Message Message0, TagClass TagClass1, Tag Tag0
where Message0.length < $param and TagClass0.name = $param and neo4j.tc2id = TagClass0.id and neo4j.mid = Message0.id and neo4j.tcid = TagClass1.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person)-[:LIKES]->(m:Message1)-[:HAS_TAG]->(t:Tag)

RETURN t.id as tid, m.id as mid, p.id as pid
**********
select Person0.firstName, Tag0.name, neo4j.mid, Message0.content, Person0.lastName, neo4j.pid
from neo4j,Message Message0, Person Person0, Tag Tag0
where Tag0.name = $param and Person0.firstName = $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(u:University)<-[:STUDY_AT]-(friend:Person)-[:KNOWS]-(p)

RETURN friend.id as friendid, org.id as orgid, u.id as uid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, University0.name
from neo4j,Organisation Organisation0, Person Person0, City City0, University University0, Person Person1
where Person1.birthday < $param and Person0.firstName = $param and neo4j.orgid = Organisation0.id and neo4j.friendid = Person0.id and neo4j.cityid = City0.id and neo4j.uid = University0.id and neo4j.pid = Person1.id
##########
MATCH (msg:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)<-[:IS_SUBCLASS_OF]-(parentTc:TagClass)

RETURN t.id as tid, msg.id as msgid, tc.id as tcid, parentTc.id as parentTcid
**********
select Message0.content, TagClass0.name, neo4j.msgid, Tag0.name
from neo4j,Message Message0, TagClass TagClass0, Tag Tag0, TagClass TagClass1
where TagClass1.name = $param and Message0.locationIP = $param and neo4j.msgid = Message0.id and neo4j.tcid = TagClass0.id and neo4j.tid = Tag0.id and neo4j.parentTcid = TagClass1.id
##########
MATCH (org:Organisation)<-[:WORK_AT]-(p:Person1)-[:KNOWS]-(friend:Person1)-[:LIKES]->(msg:Message1)

RETURN friend.id as friendid, org.id as orgid, msg.id as msgid, p.id as pid
**********
select Message0.content, Person1.lastName, Person0.firstName, Person1.firstName, Person0.lastName
from neo4j,Message Message0, Person Person0, Person Person1, Organisation Organisation0
where Message0.length > $param and Organisation0.name = $param and neo4j.msgid = Message0.id and neo4j.pid = Person0.id and neo4j.friendid = Person1.id and neo4j.orgid = Organisation0.id
##########
MATCH (f:Forum1)-[:HAS_MODERATOR]->(mod:Person)-[:WORK_AT]->(comp:Company)

RETURN mod.id as modid, f.id as fid, comp.id as compid
**********
select Forum0.title, Person0.lastName, Person0.firstName
from neo4j,Forum Forum0, Person Person0, Company Company0
where Forum0.title = $param and Company0.name = $param and neo4j.fid = Forum0.id and neo4j.modid = Person0.id and neo4j.compid = Company0.id
##########
MATCH (person:Person)-[:HAS_CREATOR]-(message:Message2)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN message.id as messageid, person.id as personid, tc.id as tcid
**********
select Message0.content, Person0.lastName, Person0.firstName
from neo4j,Message Message0, TagClass TagClass0, Person Person0
where TagClass0.name = $param and Message0.length > $param and neo4j.messageid = Message0.id and neo4j.tcid = TagClass0.id and neo4j.personid = Person0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(msg:Message1)<-[:CONTAINER_OF]-(forum:Forum2)

RETURN org.id as orgid, place.id as placeid, msg.id as msgid, forum.id as forumid
**********
select Organisation0.name, Forum0.title, Place0.name
from neo4j,Forum Forum0, Organisation Organisation0, Place Place0, Message Message0
where Organisation0.name = $param and Message0.length < $param and neo4j.forumid = Forum0.id and neo4j.orgid = Organisation0.id and neo4j.placeid = Place0.id and neo4j.msgid = Message0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)

RETURN org.id as orgid, country.id as countryid, city.id as cityid
**********
select Organisation0.name, City0.name, Country0.name
from neo4j,City City0, Organisation Organisation0, Country Country0
where Organisation0.name = $param and City0.name = $param and neo4j.cityid = City0.id and neo4j.orgid = Organisation0.id and neo4j.countryid = Country0.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(p:Post2)<-[:CONTAINER_OF]-(f:Forum1)-[:HAS_MEMBER]->(person:Person1)

RETURN person.id as personid, c.id as cid, p.id as pid, f.id as fid
**********
select Forum0.title, Person0.firstName, Post0.content, Comment0.content
from neo4j,Forum Forum0, Person Person0, Comment Comment0, Post Post0
where Forum0.title = $param and Post0.creationDate > datetime($param) and neo4j.fid = Forum0.id and neo4j.personid = Person0.id and neo4j.cid = Comment0.id and neo4j.pid = Post0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, u.id as uid, p.id as pid
**********
select University0.name, Place0.name, Person0.firstName
from neo4j,Place Place0, University University0, Person Person0
where Person0.gender = $param and Place0.name = $param and neo4j.placeid = Place0.id and neo4j.uid = University0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person)-[:LIKES]->(msg:Message1)-[:REPLY_OF]->(post:Post1)

RETURN post.id as postid, msg.id as msgid, p.id as pid
**********
select Message0.content, Post0.content, Person0.firstName
from neo4j,Post Post0, Message Message0, Person Person0
where Person0.email CONTAINS $param and Message0.length < $param and neo4j.postid = Post0.id and neo4j.msgid = Message0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:KNOWS]->(fof:Person1)

RETURN friend.id as friendid, fof.id as fofid, p.id as pid
**********
select Person1.firstName, Person2.firstName, Person0.firstName
from neo4j,Person Person0, Person Person1, Person Person2
where Person2.gender = $param and Person0.firstName = $param and neo4j.pid = Person0.id and neo4j.friendid = Person1.id and neo4j.fofid = Person2.id
##########
MATCH (u1:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(u2:University)

RETURN u1.id as u1id, u2.id as u2id, city.id as cityid
**********
select University1.name, City0.name, University0.name
from neo4j,City City0, University University0, University University1
where University0.name <> u1.name and University1.name = $param and neo4j.cityid = City0.id and neo4j.u2id = University0.id and neo4j.u1id = University1.id
##########
MATCH (p:Person1)-[:LIKES]->(m:Message2)-[:HAS_CREATOR]->(creator:Person)
RETURN m.id as mid, creator.id as creatorid, p.id as pid
**********
select Person1.firstName, Person0.firstName, neo4j.mid, Person0.lastName, Person1.lastName
from neo4j,Person Person0, Person Person1
where Person1.gender = $param and neo4j.pid = Person0.id and neo4j.creatorid = Person1.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(post:Post1)<-[:REPLY_OF]-(comment:Comment1)-[:HAS_CREATOR]->(c:Person1)

RETURN comment.id as commentid, post.id as postid, c.id as cid, f.id as fid
**********
select Person0.firstName, Post0.content, Person0.lastName, Comment0.content
from neo4j,Comment Comment0, Person Person0, Forum Forum0, Post Post0
where Forum0.title = $param and Comment0.creationDate > $param and neo4j.commentid = Comment0.id and neo4j.cid = Person0.id and neo4j.fid = Forum0.id and neo4j.postid = Post0.id
##########
MATCH (p:Person)-[:KNOWS]->(friend:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(city:City)
RETURN friend.id as friendid, org.id as orgid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, Person0.lastName, Person1.firstName, Person0.firstName, Person1.lastName
from neo4j,Person Person0, Organisation Organisation0, City City0, Person Person1
where City0.name = $param and neo4j.friendid = Person0.id and neo4j.orgid = Organisation0.id and neo4j.cityid = City0.id and neo4j.pid = Person1.id
##########
MATCH (m:Message1)-[:HAS_CREATOR]->(author:Person1)-[:IS_LOCATED_IN]->(c:City)<-[:IS_LOCATED_IN]-(u:University)

RETURN author.id as authorid, u.id as uid, c.id as cid, m.id as mid
**********
select City0.name, Person0.firstName, University0.name, Person0.lastName, Message0.content
from neo4j,University University0, City City0, Message Message0, Person Person0
where University0.name = $param and Message0.creationDate > $param and neo4j.uid = University0.id and neo4j.cid = City0.id and neo4j.mid = Message0.id and neo4j.authorid = Person0.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(post:Post2)-[:HAS_TAG]->(tag:Tag)<-[:HAS_INTEREST]-(p:Person1)
RETURN tag.id as tagid, post.id as postid, p.id as pid, f.id as fid
**********
select Person0.firstName, Tag0.name, neo4j.postid, Forum0.title, Person0.lastName
from neo4j,Person Person0, Forum Forum0, Tag Tag0
where Person0.gender = $param and neo4j.pid = Person0.id and neo4j.fid = Forum0.id and neo4j.tagid = Tag0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)<-[:IS_SUBCLASS_OF]-(parentTc:TagClass)

RETURN t.id as tid, tc.id as tcid, p.id as pid, parentTc.id as parentTcid
**********
select Person0.lastName, Tag0.name, TagClass0.name, Person0.firstName
from neo4j,Person Person0, Tag Tag0, TagClass TagClass0, TagClass TagClass1
where TagClass1.name = $param and neo4j.pid = Person0.id and neo4j.tid = Tag0.id and neo4j.parentTcid = TagClass0.id and neo4j.tcid = TagClass1.id
##########
MATCH (t:Tag)<-[:HAS_TAG]-(post:Post2)<-[:REPLY_OF]-(c:Comment1)-[:HAS_CREATOR]->(p:Person)

RETURN post.id as postid, c.id as cid, p.id as pid, t.id as tid
**********
select Person0.firstName, Post0.content, Tag0.name, Comment0.content
from neo4j,Post Post0, Tag Tag0, Comment Comment0, Person Person0
where Tag0.name = $param and Person0.gender = $param and neo4j.postid = Post0.id and neo4j.tid = Tag0.id and neo4j.cid = Comment0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(country:Country)

RETURN org.id as orgid, country.id as countryid, p.id as pid
**********
select Organisation0.name, Country0.name, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Organisation Organisation0, Country Country0
where Organisation0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.orgid = Organisation0.id and neo4j.countryid = Country0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)-[:IS_SUBCLASS_OF]->(tc2:TagClass)

RETURN tc2.id as tc2id, tc.id as tcid, p.id as pid, t.id as tid
**********
select TagClass1.name, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,TagClass TagClass0, Person Person0, TagClass TagClass1, Tag Tag0
where Person0.browserUsed = $param and TagClass0.name = $param and neo4j.tc2id = TagClass0.id and neo4j.pid = Person0.id and neo4j.tcid = TagClass1.id and neo4j.tid = Tag0.id
##########
MATCH (u:University)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(org:Organisation)<-[:WORK_AT]-(person:Person)

RETURN person.id as personid, org.id as orgid, place.id as placeid, u.id as uid
**********
select Organisation0.name, University0.name, Place0.name, Person0.firstName
from neo4j,University University0, Place Place0, Organisation Organisation0, Person Person0
where Place0.name = $param and University0.name = $param and neo4j.uid = University0.id and neo4j.placeid = Place0.id and neo4j.orgid = Organisation0.id and neo4j.personid = Person0.id
##########
MATCH (p:Person1)-[:LIKES]->(msg:Message2)-[:HAS_CREATOR]->(creator:Person)

RETURN creator.id as creatorid, msg.id as msgid, p.id as pid
**********
select Message0.content, Person1.lastName, neo4j.msgid, Person1.firstName
from neo4j,Person Person0, Person Person1, Message Message0
where Person0.firstName = $param and Message0.length > $param and neo4j.creatorid = Person0.id and neo4j.pid = Person1.id and neo4j.msgid = Message0.id
##########
MATCH (c:Comment2)-[:REPLY_OF*1..2]->(m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN tc.id as tcid, c.id as cid, t.id as tid
**********
select Comment0.content, Tag0.name, neo4j.cid
from neo4j,TagClass TagClass0, Tag Tag0, Comment Comment0
where TagClass0.name = $param and Comment0.creationDate > $param and neo4j.tcid = TagClass0.id and neo4j.tid = Tag0.id and neo4j.cid = Comment0.id
##########
MATCH (forum:Forum2)-[:HAS_MEMBER]->(person:Person1)-[:HAS_INTEREST]->(tag:Tag)

RETURN person.id as personid, forum.id as forumid, tag.id as tagid
**********
select Tag0.name, neo4j.forumid, Person0.lastName, Person0.firstName
from neo4j,Tag Tag0, Forum Forum0, Person Person0
where Forum0.title = $param and Tag0.name = $param and neo4j.tagid = Tag0.id and neo4j.forumid = Forum0.id and neo4j.personid = Person0.id
##########
MATCH (person:Person1)-[:KNOWS]->(friend:Person1)-[:WORK_AT]->(company:Company)

RETURN friend.id as friendid, company.id as companyid, person.id as personid
**********
select Person1.lastName, Company0.name, Person1.firstName, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Company Company0, Person Person1
where Person1.browserUsed = $param and Person0.locationIP = $param and neo4j.personid = Person0.id and neo4j.companyid = Company0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person1)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)

RETURN country.id as countryid, p.id as pid, city.id as cityid
**********
select Country0.name, Person0.lastName, Person0.firstName
from neo4j,City City0, Person Person0, Country Country0
where Person0.gender = $param and City0.name = $param and neo4j.cityid = City0.id and neo4j.pid = Person0.id and neo4j.countryid = Country0.id
##########
MATCH (post:Post2)-[:HAS_TAG]->(tag:Tag)<-[:HAS_TAG]-(comment:Comment2)-[:REPLY_OF]->(post)

RETURN post.id as postid, comment.id as commentid
**********
select neo4j.postid, neo4j.commentid, Post0.content, Comment0.content
from neo4j,Post Post0, Comment Comment0
where Post0.creationDate < $param and Comment0.length > $param and neo4j.postid = Post0.id and neo4j.commentid = Comment0.id
##########
MATCH (forum:Forum)-[:CONTAINER_OF]->(post:Post1)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, post.id as postid, forum.id as forumid
**********
select Forum0.title, neo4j.postid, Person0.lastName, Person0.firstName
from neo4j,Forum Forum0, Person Person0
where Person0.speaks = $param and Forum0.creationDate > $param and neo4j.forumid = Forum0.id and neo4j.creatorid = Person0.id
##########
MATCH (person:Person)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(place:Place)
WHERE place.id = $param
RETURN company.id as companyid, person.id as personid, place.id as placeid
**********
select Person0.lastName, Place0.name, Company0.name, Person0.firstName
from neo4j,Place Place0, Person Person0, Company Company0
where Company0.name = $param and neo4j.placeid = Place0.id and neo4j.personid = Person0.id and neo4j.companyid = Company0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:LIKES]->(comment:Comment1)-[:REPLY_OF]->(msg:Message1)-[:HAS_CREATOR]->(author:Person)

RETURN friend.id as friendid, author.id as authorid, comment.id as commentid, msg.id as msgid, p.id as pid
**********
select Message0.content, Person1.lastName, Person0.firstName, Comment0.content, Person2.firstName, Person1.firstName, Person2.lastName, Person0.lastName
from neo4j,Person Person0, Person Person1, Comment Comment0, Person Person2, Message Message0
where Person0.birthday > $param and Person2.gender = $param and neo4j.pid = Person0.id and neo4j.friendid = Person1.id and neo4j.commentid = Comment0.id and neo4j.authorid = Person2.id and neo4j.msgid = Message0.id
##########
MATCH (comment:Comment1)-[:REPLY_OF]->(post:Post2)-[:HAS_CREATOR]->(person:Person)

RETURN person.id as personid, comment.id as commentid, post.id as postid
**********
select Comment0.content, neo4j.commentid, Person0.lastName, Person0.firstName, neo4j.postid
from neo4j,Comment Comment0, Person Person0
where Person0.gender = $param and Comment0.browserUsed = $param and neo4j.commentid = Comment0.id and neo4j.personid = Person0.id
##########
MATCH (f:Forum2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN tc.id as tcid, f.id as fid, t.id as tid
**********
select neo4j.fid, Forum0.title, Tag0.name
from neo4j,Forum Forum0, TagClass TagClass0, Tag Tag0
where TagClass0.name = $param and Forum0.creationDate < $param and neo4j.fid = Forum0.id and neo4j.tcid = TagClass0.id and neo4j.tid = Tag0.id
##########
MATCH (f:Forum)-[:HAS_MEMBER]->(p:Person1)-[:LIKES]->(m:Message2)

RETURN p.id as pid, f.id as fid, m.id as mid
**********
select neo4j.mid, Message0.content, Message0.creationDate
from neo4j,Person Person0, Forum Forum0, Message Message0
where Forum0.title = $param and Person0.locationIP = $param and neo4j.pid = Person0.id and neo4j.fid = Forum0.id and neo4j.mid = Message0.id
##########
MATCH (f:Forum2)-[:CONTAINER_OF]->(post:Post2)-[:HAS_TAG]->(tag:Tag)<-[:HAS_INTEREST]-(person:Person1)-[:IS_LOCATED_IN]->(city:City)

RETURN tag.id as tagid, person.id as personid, post.id as postid, f.id as fid, city.id as cityid
**********
select neo4j.postid, Tag0.name, Person0.lastName, Person0.firstName, neo4j.fid, Forum0.title, Post0.content
from neo4j,Tag Tag0, Person Person0, Post Post0, City City0, Forum Forum0
where City0.name = $param and Forum0.title CONTAINS $param and neo4j.tagid = Tag0.id and neo4j.personid = Person0.id and neo4j.postid = Post0.id and neo4j.cityid = City0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person1)-[:KNOWS]->(f:Person)-[:STUDY_AT]->(u:University)

RETURN u.id as uid, p.id as pid, f.id as fid
**********
select Person1.firstName, neo4j.fid, Person1.lastName
from neo4j,University University0, Person Person0, Person Person1
where University0.name = $param and Person0.speaks = $param and neo4j.uid = University0.id and neo4j.pid = Person0.id and neo4j.fid = Person1.id
##########
MATCH (p:Person)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(pl:Place)-[:IS_PART_OF]->(co:Country)

RETURN c.id as cid, p.id as pid, co.id as coid
**********
select Person0.firstName, Person0.lastName, Company0.name, neo4j.pid
from neo4j,Country Country0, Company Company0, Person Person0
where Country0.name = $param and Person0.browserUsed = $param and neo4j.coid = Country0.id and neo4j.cid = Company0.id and neo4j.pid = Person0.id
##########
MATCH (m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)-[:IS_SUBCLASS_OF*]->(parent:TagClass)

RETURN t.id as tid, tc.id as tcid, parent.id as parentid, m.id as mid
**********
select TagClass1.name, Message0.content, Message0.creationDate, Tag0.name
from neo4j,TagClass TagClass0, Message Message0, Tag Tag0, TagClass TagClass1
where TagClass0.name = $param and Message0.creationDate > $param and neo4j.parentid = TagClass0.id and neo4j.mid = Message0.id and neo4j.tid = Tag0.id and neo4j.tcid = TagClass1.id
##########
MATCH (p:Person)-[:KNOWS]->(friend:Person1)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(pl:Place)

RETURN friend.id as friendid, pl.id as plid, u.id as uid, p.id as pid
**********
select Person1.lastName, Person0.firstName, Person1.firstName, University0.name, Place0.name, Person0.lastName
from neo4j,Person Person0, University University0, Place Place0, Person Person1
where Place0.name = $param and Person1.gender = $param and neo4j.pid = Person0.id and neo4j.uid = University0.id and neo4j.plid = Place0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person)-[:WORK_AT]->(o:Organisation)-[:IS_LOCATED_IN]->(co:Country)

RETURN o.id as oid, p.id as pid, co.id as coid
**********
select Country0.name, Organisation0.name, Person0.lastName, Person0.firstName
from neo4j,Organisation Organisation0, Country Country0, Person Person0
where Person0.speaks CONTAINS $param and Country0.name = $param and neo4j.oid = Organisation0.id and neo4j.coid = Country0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(c:City)

RETURN u.id as uid, c.id as cid, p.id as pid
**********
select University0.name, Person0.lastName, City0.name, Person0.firstName
from neo4j,Person Person0, University University0, City City0
where Person0.birthday < $param and City0.name = $param and neo4j.pid = Person0.id and neo4j.uid = University0.id and neo4j.cid = City0.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(post:Post1)-[:HAS_CREATOR]->(p:Person1)-[:STUDY_AT]->(u:University)

RETURN post.id as postid, u.id as uid, p.id as pid, f.id as fid
**********
select Person0.lastName, Forum0.title, Post0.content, Person0.firstName
from neo4j,Person Person0, Forum Forum0, University University0, Post Post0
where University0.name = $param and Forum0.title CONTAINS $param and neo4j.pid = Person0.id and neo4j.fid = Forum0.id and neo4j.uid = University0.id and neo4j.postid = Post0.id
##########
MATCH (cmt:Comment1)-[:REPLY_OF]->(msg:Message2)-[:HAS_CREATOR]->(creator:Person)-[:HAS_INTEREST]->(tag:Tag)

RETURN creator.id as creatorid, msg.id as msgid, cmt.id as cmtid, tag.id as tagid
**********
select Person0.firstName, Message0.content, Tag0.name, neo4j.cmtid, Comment0.content, neo4j.msgid, Person0.lastName
from neo4j,Message Message0, Tag Tag0, Person Person0, Comment Comment0
where Person0.locationIP = $param and Comment0.length < $param and neo4j.msgid = Message0.id and neo4j.tagid = Tag0.id and neo4j.creatorid = Person0.id and neo4j.cmtid = Comment0.id
##########
MATCH (post:Post1)-[:HAS_CREATOR]->(p:Person)-[:STUDY_AT]->(uni:University)-[:IS_LOCATED_IN]->(city:City)

RETURN uni.id as uniid, post.id as postid, p.id as pid, city.id as cityid
**********
select City0.name, University0.name, Post0.content, Person0.firstName, neo4j.postid, Person0.lastName
from neo4j,City City0, Post Post0, University University0, Person Person0
where Person0.email = $param and Post0.length > $param and neo4j.cityid = City0.id and neo4j.postid = Post0.id and neo4j.uniid = University0.id and neo4j.pid = Person0.id
##########
MATCH (tag:Tag)-[:HAS_TYPE]->(tc:TagClass)-[:IS_SUBCLASS_OF]->(parentTc:TagClass)

RETURN tc.id as tcid, tag.id as tagid, parentTc.id as parentTcid
**********
select TagClass1.name, neo4j.tagid, Tag0.name, TagClass0.name
from neo4j,TagClass TagClass0, TagClass TagClass1, Tag Tag0
where TagClass1.name = $param and Tag0.name = $param and neo4j.parentTcid = TagClass0.id and neo4j.tcid = TagClass1.id and neo4j.tagid = Tag0.id
##########
MATCH (c:Comment2)-[:REPLY_OF*]->(p:Post2)-[:HAS_CREATOR]->(creator:Person)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, creator.id as creatorid, c.id as cid, p.id as pid
**********
select Person0.firstName, Person0.lastName, Post0.content, Comment0.content
from neo4j,Place Place0, Post Post0, Comment Comment0, Person Person0
where Person0.gender = $param and Place0.name = $param and neo4j.placeid = Place0.id and neo4j.pid = Post0.id and neo4j.cid = Comment0.id and neo4j.creatorid = Person0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(univ:University)<-[:STUDY_AT]-(p:Person1)

RETURN org.id as orgid, univ.id as univid, p.id as pid, city.id as cityid
**********
select Organisation0.name, University0.name, Person0.lastName, Person0.firstName
from neo4j,Organisation Organisation0, University University0, City City0, Person Person0
where Organisation0.name = $param and City0.name = $param and neo4j.orgid = Organisation0.id and neo4j.univid = University0.id and neo4j.cityid = City0.id and neo4j.pid = Person0.id
##########
MATCH (f:Forum)-[:CONTAINER_OF]->(p:Post2)-[:HAS_TAG]->(t:Tag)<-[:HAS_INTEREST]-(person:Person1)-[:KNOWS]->(p2:Person1)

RETURN person.id as personid, p2.id as p2id, p.id as pid, f.id as fid, t.id as tid
**********
select Person1.firstName, Person1.lastName, Post0.content, Person0.lastName, Tag0.name, Person0.firstName, Forum0.title
from neo4j,Forum Forum0, Person Person0, Post Post0, Person Person1, Tag Tag0
where Forum0.title = $param and Person0.email CONTAINS $param and neo4j.fid = Forum0.id and neo4j.personid = Person0.id and neo4j.pid = Post0.id and neo4j.p2id = Person1.id and neo4j.tid = Tag0.id
##########
MATCH (m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)<-[:IS_SUBCLASS_OF]-(tc2:TagClass)

RETURN t.id as tid, tc2.id as tc2id, tc.id as tcid, m.id as mid
**********
select TagClass0.name, Message0.content, Tag0.name, TagClass1.name
from neo4j,TagClass TagClass0, TagClass TagClass1, Tag Tag0, Message Message0
where TagClass1.name = $param and Message0.length > $param and neo4j.tcid = TagClass0.id and neo4j.tc2id = TagClass1.id and neo4j.tid = Tag0.id and neo4j.mid = Message0.id
##########
MATCH (tc:TagClass)<-[:HAS_TYPE]-(t:Tag)<-[:HAS_TAG]-(post:Post2)<-[:CONTAINER_OF]-(f:Forum)

RETURN post.id as postid, tc.id as tcid, f.id as fid, t.id as tid
**********
select Forum0.title, Post0.content, Tag0.name
from neo4j,Forum Forum0, Tag Tag0, Post Post0, TagClass TagClass0
where TagClass0.name = $param and Forum0.creationDate < $param and neo4j.fid = Forum0.id and neo4j.tid = Tag0.id and neo4j.postid = Post0.id and neo4j.tcid = TagClass0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(msg:Message2)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, msg.id as msgid, p.id as pid, t.id as tid
**********
select Message0.content, Message0.creationDate, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Place Place0, Message Message0, Tag Tag0
where Tag0.name = $param and Place0.name = $param and neo4j.pid = Person0.id and neo4j.placeid = Place0.id and neo4j.msgid = Message0.id and neo4j.tid = Tag0.id
##########
MATCH (c:City)<-[:IS_LOCATED_IN]-(u:University)<-[:STUDY_AT]-(p:Person)-[:HAS_INTEREST]->(t:Tag)

RETURN u.id as uid, c.id as cid, p.id as pid, t.id as tid
**********
select University0.name, Person0.lastName, City0.name, Person0.firstName
from neo4j,Tag Tag0, Person Person0, University University0, City City0
where Tag0.name = $param and City0.name = $param and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.uid = University0.id and neo4j.cid = City0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message1)-[:REPLY_OF]->(c:Comment2)-[:HAS_CREATOR]->(p2:Person)

RETURN m.id as mid, c.id as cid, p2.id as p2id, p.id as pid, t.id as tid
**********
select Person0.firstName, Person0.lastName, Person1.firstName, Comment0.content, Message0.content, Person1.lastName
from neo4j,Message Message0, Person Person0, Comment Comment0, Person Person1, Tag Tag0
where Person0.gender = $param and Tag0.name = $param and neo4j.mid = Message0.id and neo4j.p2id = Person0.id and neo4j.cid = Comment0.id and neo4j.pid = Person1.id and neo4j.tid = Tag0.id
##########
MATCH (person:Person1)-[:STUDY_AT]->(university:University)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(message:Message2)

RETURN message.id as messageid, university.id as universityid, person.id as personid
**********
select Message0.content, Person0.lastName, University0.name, Person0.firstName
from neo4j,Message Message0, Person Person0, University University0
where University0.name = $param and Message0.creationDate < datetime($param) and neo4j.messageid = Message0.id and neo4j.personid = Person0.id and neo4j.universityid = University0.id
##########
MATCH (f:Forum)-[:CONTAINER_OF]->(p:Post1)-[:HAS_CREATOR]->(creator:Person1)-[:HAS_INTEREST]->(tag:Tag)

RETURN tag.id as tagid, creator.id as creatorid, p.id as pid, f.id as fid
**********
select Person0.email, Forum0.title, Tag0.name, neo4j.pid
from neo4j,Person Person0, Tag Tag0, Forum Forum0
where Forum0.title = $param and Person0.locationIP = $param and neo4j.creatorid = Person0.id and neo4j.tagid = Tag0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message2)<-[:CONTAINER_OF]-(f:Forum2)-[:HAS_MODERATOR]->(mod:Person)

RETURN mod.id as modid, m.id as mid, p.id as pid, t.id as tid
**********
select Person1.lastName, Message0.content, Tag0.name, Person0.firstName
from neo4j,Person Person0, Message Message0, Tag Tag0, Person Person1
where Tag0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.mid = Message0.id and neo4j.tid = Tag0.id and neo4j.modid = Person1.id
##########
MATCH (u:University)<-[:STUDY_AT]-(p:Person1)-[:KNOWS]->(friend:Person)-[:WORK_AT]->(c:Company)

RETURN friend.id as friendid, u.id as uid, c.id as cid, p.id as pid
**********
select University0.name, Person1.lastName, Company0.name, Person0.firstName
from neo4j,Person Person0, University University0, Company Company0, Person Person1
where Person1.birthday > $param and University0.name = $param and neo4j.pid = Person0.id and neo4j.uid = University0.id and neo4j.cid = Company0.id and neo4j.friendid = Person1.id
##########
MATCH (comment:Comment1)-[:REPLY_OF]->(post:Post1)-[:HAS_CREATOR]->(creator:Person1)-[:LIKES]->(likedPost:Post2)
WHERE likedPost.id = $param
RETURN creator.id as creatorid, post.id as postid, comment.id as commentid
**********
select Post0.content, Person0.lastName, Person0.firstName, Comment0.content
from neo4j,Post Post0, Comment Comment0, Person Person0
where Person0.birthday > date($param) and neo4j.postid = Post0.id and neo4j.commentid = Comment0.id and neo4j.creatorid = Person0.id
##########
MATCH (forum:Forum2)-[:HAS_MEMBER]->(person:Person1)-[:HAS_INTEREST]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)

RETURN tagClass.id as tagClassid, person.id as personid, forum.id as forumid, tag.id as tagid
**********
select Forum0.title, Tag0.name, Person0.lastName, Person0.firstName
from neo4j,Tag Tag0, Forum Forum0, TagClass TagClass0, Person Person0
where TagClass0.name = $param and Forum0.creationDate < datetime($param) and neo4j.tagid = Tag0.id and neo4j.forumid = Forum0.id and neo4j.tagClassid = TagClass0.id and neo4j.personid = Person0.id
##########
MATCH (c:Comment2)-[:REPLY_OF*2]->(originalPost:Post2)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, c.id as cid, originalPost.title as originalPosttitle
**********
select neo4j.originalPosttitle, Person0.firstName, neo4j.cid
from neo4j,Comment Comment0, Person Person0
where Comment0.creationDate > $param and Person0.speaks CONTAINS $param and neo4j.cid = Comment0.id and neo4j.creatorid = Person0.id
##########
MATCH (f:Forum2)-[:HAS_MEMBER]->(p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(c:City)

RETURN u.id as uid, c.id as cid, p.id as pid, f.id as fid
**********
select City0.name, Person0.firstName, University0.name, Forum0.title, Person0.lastName
from neo4j,Forum Forum0, City City0, University University0, Person Person0
where City0.name = $param and Forum0.creationDate > datetime($param) and neo4j.fid = Forum0.id and neo4j.cid = City0.id and neo4j.uid = University0.id and neo4j.pid = Person0.id
##########
MATCH (c:Comment1)-[:REPLY_OF*]->(origPost:Post2)<-[:CONTAINER_OF]-(f:Forum)

RETURN c.id as cid, f.id as fid
**********
select Comment0.creationDate, Comment0.content
from neo4j,Comment Comment0, Forum Forum0
where Forum0.title = $param and neo4j.cid = Comment0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(co:Company)-[:IS_LOCATED_IN]->(c:Country)

RETURN c.id as cid, p.id as pid, co.id as coid
**********
select Company0.name, Person0.lastName, Country0.name, Person0.firstName
from neo4j,Person Person0, Country Country0, Company Company0
where Country0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.cid = Country0.id and neo4j.coid = Company0.id
##########
MATCH (p:Person)-[:LIKES]->(msg:Message2)-[:REPLY_OF]->(post:Post1)-[:HAS_TAG]->(t:Tag)

RETURN post.id as postid, msg.id as msgid, p.id as pid, t.id as tid
**********
select Message0.content, Post0.content, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Post Post0, Tag Tag0, Message Message0
where Tag0.name = $param and Message0.creationDate < datetime($param) and neo4j.pid = Person0.id and neo4j.postid = Post0.id and neo4j.tid = Tag0.id and neo4j.msgid = Message0.id
##########
MATCH (msg:Message1)-[:HAS_TAG]->(tag:Tag)<-[:HAS_TAG]-(relatedMsg:Message2)

RETURN relatedMsg.id as relatedMsgid, msg.id as msgid
**********
select Message0.content, Message1.content
from neo4j,Message Message0, Message Message1
where Message0.creationDate > $param and neo4j.msgid = Message0.id and neo4j.relatedMsgid = Message1.id
##########
MATCH (p:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(city:City)

RETURN org.id as orgid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, Person0.lastName, Person0.firstName
from neo4j,Organisation Organisation0, Person Person0, City City0
where Organisation0.name = $param and City0.name = $param and neo4j.orgid = Organisation0.id and neo4j.pid = Person0.id and neo4j.cityid = City0.id
##########
MATCH (p:Person)-[:KNOWS]->(friend:Person)-[:LIKES]->(c:Comment1)
WHERE p.id = $param
RETURN friend.id as friendid, c.id as cid, p.id as pid
**********
select Person0.lastName, Comment0.content, Person1.firstName, Person0.firstName, Person1.lastName
from neo4j,Person Person0, Comment Comment0, Person Person1
where Comment0.creationDate > datetime($param) and neo4j.friendid = Person0.id and neo4j.cid = Comment0.id and neo4j.pid = Person1.id
##########
MATCH (m:Message2)<-[:REPLY_OF]-(c:Comment1)-[:HAS_CREATOR]->(p:Person)-[:LIKES]->(post:Post1)-[:HAS_TAG]->(t:Tag)

RETURN t.id as tid, m.id as mid, post.id as postid, c.id as cid, p.id as pid
**********
select neo4j.pid, neo4j.mid, neo4j.tid, neo4j.cid, neo4j.postid
from neo4j,Tag Tag0, Message Message0
where Tag0.name = $param and Message0.browserUsed = $param and neo4j.tid = Tag0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message2)-[:REPLY_OF]->(c:Comment2)-[:HAS_CREATOR]->(person:Person)

RETURN t.id as tid, person.id as personid, p.id as pid, m.id as mid
**********
select Person0.firstName, Person1.lastName, Tag0.name, Person1.firstName, Message0.content, Person0.lastName
from neo4j,Message Message0, Person Person0, Person Person1, Tag Tag0
where Person1.birthday < $param and Message0.creationDate > $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.personid = Person1.id and neo4j.tid = Tag0.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(post:Post2)-[:HAS_CREATOR]->(p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(c:City)

RETURN post.id as postid, u.id as uid, c.id as cid, p.id as pid, f.id as fid
**********
select City0.name, Post0.content, Person0.firstName, University0.name, Forum0.title, Person0.lastName
from neo4j,City City0, Forum Forum0, Post Post0, Person Person0, University University0
where City0.name = $param and Forum0.title CONTAINS $param and neo4j.cid = City0.id and neo4j.fid = Forum0.id and neo4j.postid = Post0.id and neo4j.pid = Person0.id and neo4j.uid = University0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(comp:Company)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_PART_OF]-(country:Country)

RETURN place.id as placeid, country.id as countryid, p.id as pid, comp.id as compid
**********
select neo4j.countryid, neo4j.placeid, neo4j.compid, neo4j.pid
from neo4j,Country Country0, Person Person0
where Country0.name = $param and Person0.speaks = $param and neo4j.countryid = Country0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(o:Organisation)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(univ:University)<-[:STUDY_AT]-(student:Person1)

RETURN student.id as studentid, o.id as oid, univ.id as univid, p.id as pid, city.id as cityid
**********
select City0.name, University0.name, Organisation0.name, Person0.lastName, Person0.firstName, Person1.firstName, Person1.lastName
from neo4j,Organisation Organisation0, City City0, Person Person0, Person Person1, University University0
where Person0.gender = $param and Organisation0.name = $param and neo4j.oid = Organisation0.id and neo4j.cityid = City0.id and neo4j.studentid = Person0.id and neo4j.pid = Person1.id and neo4j.univid = University0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person)-[:LIKES]->(post:Post2)

RETURN friend.id as friendid, post.id as postid, p.id as pid
**********
select Person1.lastName, Person0.lastName, Person1.firstName, Person0.firstName, Post0.content
from neo4j,Person Person0, Person Person1, Post Post0
where Post0.creationDate > $param and neo4j.friendid = Person0.id and neo4j.pid = Person1.id and neo4j.postid = Post0.id
##########
MATCH (forum:Forum)-[:HAS_MODERATOR]->(moderator:Person1)-[:LIKES]->(post:Post2)-[:HAS_CREATOR]->(creator:Person)-[:HAS_INTEREST]->(tag:Tag)

RETURN moderator.id as moderatorid, creator.id as creatorid, post.id as postid, tag.id as tagid
**********
select Person1.email, Post0.content, Person1.firstName
from neo4j,Person Person0, Person Person1, Post Post0, Tag Tag0
where Person0.gender = $param and Tag0.name = $param and neo4j.moderatorid = Person0.id and neo4j.creatorid = Person1.id and neo4j.postid = Post0.id and neo4j.tagid = Tag0.id
##########
MATCH (f:Forum2)-[:CONTAINER_OF]->(m:Message2)-[:HAS_CREATOR]->(p:Person1)

RETURN p.id as pid, f.id as fid, m.id as mid
**********
select Forum0.title, Message0.content, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Forum Forum0, Message Message0
where Forum0.title = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.fid = Forum0.id and neo4j.mid = Message0.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(m:Message2)-[:HAS_CREATOR]->(p:Person1)

RETURN c.id as cid, p.id as pid, m.id as mid
**********
select Person0.firstName, Message0.content, Person0.lastName, Comment0.content
from neo4j,Person Person0, Comment Comment0, Message Message0
where Comment0.creationDate > $param and neo4j.pid = Person0.id and neo4j.cid = Comment0.id and neo4j.mid = Message0.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(m:Message1)-[:HAS_CREATOR]->(p:Person)-[:IS_LOCATED_IN]->(place:City)

RETURN place.id as placeid, c.id as cid, p.id as pid, m.id as mid
**********
select Person0.firstName, Person0.lastName, Comment0.content, neo4j.cid
from neo4j,Message Message0, Person Person0, Comment Comment0, City City0
where City0.name = $param and Message0.creationDate > $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.cid = Comment0.id and neo4j.placeid = City0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN c.id as cid, country.id as countryid, p.id as pid
**********
select Country0.name, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Company Company0, Person Person0, Country Country0
where Person0.birthday < $param and Country0.name = $param and neo4j.cid = Company0.id and neo4j.pid = Person0.id and neo4j.countryid = Country0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(comp:Company)-[:IS_LOCATED_IN]->(c:Country)

RETURN c.id as cid, p.id as pid, comp.id as compid
**********
select Person0.lastName, Company0.name, Country0.name, Person0.firstName
from neo4j,Person Person0, Company Company0, Country Country0
where Person0.gender = $param and Country0.name = $param and neo4j.pid = Person0.id and neo4j.compid = Company0.id and neo4j.cid = Country0.id
##########
MATCH (cmt:Comment1)-[:REPLY_OF]->(post:Post1)-[:HAS_CREATOR]->(p:Person)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, post.id as postid, cmt.id as cmtid, p.id as pid
**********
select Post0.content, Comment0.content, Place0.name, Person0.firstName
from neo4j,Comment Comment0, Post Post0, Place Place0, Person Person0
where Comment0.length < $param and Place0.name = $param and neo4j.cmtid = Comment0.id and neo4j.postid = Post0.id and neo4j.placeid = Place0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(f:Forum2)-[:CONTAINER_OF]->(post:Post1)

RETURN post.id as postid, p.id as pid, f.id as fid, t.id as tid
**********
select Forum0.title, Post0.content, Person0.firstName
from neo4j,Person Person0, Tag Tag0, Forum Forum0, Post Post0
where Tag0.name = $param and Post0.creationDate > datetime($param) and neo4j.pid = Person0.id and neo4j.tid = Tag0.id and neo4j.fid = Forum0.id and neo4j.postid = Post0.id
##########
MATCH (cmt:Comment1)-[:REPLY_OF]->(msg:Message2)-[:HAS_CREATOR]->(creator:Person)

RETURN creator.id as creatorid, msg.id as msgid, cmt.id as cmtid
**********
select neo4j.creatorid, Person0.firstName, Message0.content, neo4j.cmtid, Comment0.content, neo4j.msgid, Person0.lastName
from neo4j,Person Person0, Comment Comment0, Message Message0
where Person0.locationIP = $param and Comment0.creationDate < $param and neo4j.creatorid = Person0.id and neo4j.cmtid = Comment0.id and neo4j.msgid = Message0.id
##########
MATCH (p:Person)-[:STUDY_AT]->(uni:University)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(msg:Message1)<-[:REPLY_OF]-(cmt:Comment1)

RETURN uni.id as uniid, place.id as placeid, msg.id as msgid, cmt.id as cmtid, p.id as pid
**********
select University0.name, Message0.content, Person0.firstName, Comment0.content, neo4j.pid
from neo4j,Place Place0, Message Message0, University University0, Person Person0, Comment Comment0
where Person0.birthday < $param and Place0.name = $param and neo4j.placeid = Place0.id and neo4j.msgid = Message0.id and neo4j.uniid = University0.id and neo4j.pid = Person0.id and neo4j.cmtid = Comment0.id
##########
MATCH (msg:Message1)-[:REPLY_OF]->(post:Post1)-[:HAS_CREATOR]->(creator:Person)-[:WORK_AT]->(comp:Company)

RETURN creator.id as creatorid, post.id as postid, msg.id as msgid, comp.id as compid
**********
select Person0.firstName, Message0.content, neo4j.msgid, neo4j.postid, Company0.name
from neo4j,Company Company0, Message Message0, Person Person0
where Company0.name = $param and Message0.locationIP = $param and neo4j.compid = Company0.id and neo4j.msgid = Message0.id and neo4j.creatorid = Person0.id
##########
MATCH (p:Person1)-[:LIKES]->(msg:Message1)-[:HAS_TAG]->(t:Tag)

RETURN msg.id as msgid, p.id as pid, t.id as tid
**********
select Message0.content, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Person Person0, Message Message0, Tag Tag0
where Tag0.name = $param and Message0.creationDate > datetime($param) and neo4j.pid = Person0.id and neo4j.msgid = Message0.id and neo4j.tid = Tag0.id
##########
MATCH (tag:Tag)<-[:HAS_TAG]-(comment:Comment2)-[:REPLY_OF]->(msg:Message1)-[:HAS_TAG]->(relatedTag:Tag)

RETURN comment.id as commentid, msg.id as msgid, tag.id as tagid, relatedTag.id as relatedTagid
**********
select Message0.content, Tag1.name, Tag0.name, Comment0.content
from neo4j,Message Message0, Tag Tag0, Tag Tag1, Comment Comment0
where Tag0.name = $param and Tag1.name = $param and neo4j.msgid = Message0.id and neo4j.relatedTagid = Tag0.id and neo4j.tagid = Tag1.id and neo4j.commentid = Comment0.id
##########
MATCH (tc:TagClass)<-[:HAS_TYPE]-(tag:Tag)<-[:HAS_TAG]-(post:Post2)-[:HAS_CREATOR]->(person:Person1)

RETURN tag.id as tagid, person.id as personid, post.id as postid, tc.id as tcid
**********
select Tag0.name, Person0.lastName, Post0.content, Person0.firstName
from neo4j,TagClass TagClass0, Person Person0, Post Post0, Tag Tag0
where TagClass0.name = $param and Person0.gender = $param and neo4j.tcid = TagClass0.id and neo4j.personid = Person0.id and neo4j.postid = Post0.id and neo4j.tagid = Tag0.id
##########
MATCH (f:Forum)-[:CONTAINER_OF]->(m:Message2)-[:HAS_CREATOR]->(p:Person)-[:LIKES]->(c:Comment2)

RETURN c.id as cid, p.id as pid, f.id as fid
**********
select neo4j.cid, Person0.firstName, Comment0.content, neo4j.fid, Forum0.title, neo4j.pid
from neo4j,Person Person0, Comment Comment0, Forum Forum0
where Forum0.title = $param and Comment0.length > $param and neo4j.pid = Person0.id and neo4j.cid = Comment0.id and neo4j.fid = Forum0.id
##########
MATCH (city:City)<-[:IS_LOCATED_IN]-(org:Organisation)<-[:STUDY_AT]-(person:Person)-[:HAS_INTEREST]->(tag:Tag)

RETURN person.id as personid, org.id as orgid, tag.id as tagid, city.id as cityid
**********
select Organisation0.name, Tag0.name, Person0.lastName, Person0.firstName
from neo4j,Tag Tag0, Organisation Organisation0, City City0, Person Person0
where Tag0.name = $param and City0.name = $param and neo4j.tagid = Tag0.id and neo4j.orgid = Organisation0.id and neo4j.cityid = City0.id and neo4j.personid = Person0.id
##########
MATCH (comment:Comment2)-[:REPLY_OF]->(post:Post1)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, comment.id as commentid, post.id as postid
**********
select Post0.content, Person0.lastName, Person0.firstName, Comment0.content
from neo4j,Person Person0, Comment Comment0, Post Post0
where Comment0.creationDate > $param and Person0.birthday < $param and neo4j.creatorid = Person0.id and neo4j.commentid = Comment0.id and neo4j.postid = Post0.id
##########
MATCH (forum:Forum2)-[:HAS_MEMBER]->(member:Person1)-[:WORK_AT]->(company:Company)

RETURN member.id as memberid, forum.id as forumid, company.id as companyid
**********
select Forum0.title, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Company Company0, Person Person0, Forum Forum0
where Forum0.title = $param and Company0.name = $param and neo4j.companyid = Company0.id and neo4j.memberid = Person0.id and neo4j.forumid = Forum0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(c:City)-[:IS_PART_OF]->(co:Country)

RETURN u.id as uid, c.id as cid, p.id as pid, co.id as coid
**********
select University0.name, Person0.lastName, City0.name, Person0.firstName
from neo4j,Person Person0, University University0, City City0, Country Country0
where Person0.birthday < $param and Country0.name = $param and neo4j.pid = Person0.id and neo4j.uid = University0.id and neo4j.cid = City0.id and neo4j.coid = Country0.id
##########
MATCH (uni:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(person:Person1)

RETURN uni.id as uniid, person.id as personid, city.id as cityid
**********
select City0.name, Person0.lastName, Person0.firstName
from neo4j,University University0, City City0, Person Person0
where University0.name = $param and Person0.gender = $param and neo4j.uniid = University0.id and neo4j.cityid = City0.id and neo4j.personid = Person0.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)-[:IS_SUBCLASS_OF]->(tc2:TagClass)

RETURN tc2.id as tc2id, tc.id as tcid, p.id as pid
**********
select TagClass1.name, Person0.lastName, TagClass0.name, Person0.firstName
from neo4j,TagClass TagClass0, TagClass TagClass1, Person Person0
where Person0.email = $param and TagClass0.name = $param and neo4j.tc2id = TagClass0.id and neo4j.tcid = TagClass1.id and neo4j.pid = Person0.id
##########
MATCH (msg:Message1)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)

RETURN tagClass.id as tagClassid, msg.id as msgid, tag.id as tagid
**********
select Message0.content, Tag0.name, Message0.locationIP
from neo4j,TagClass TagClass0, Message Message0, Tag Tag0
where Message0.length > $param and TagClass0.name = $param and neo4j.tagClassid = TagClass0.id and neo4j.msgid = Message0.id and neo4j.tagid = Tag0.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(m:Message2)-[:HAS_CREATOR]->(p:Person1)-[:IS_LOCATED_IN]->(ci:City)-[:IS_PART_OF]->(co:Country)

RETURN ci.id as ciid, p.id as pid, f.id as fid, m.id as mid
**********
select Forum0.title, Message0.content, City0.name, Person0.firstName
from neo4j,Forum Forum0, Message Message0, Person Person0, City City0
where Forum0.creationDate > $param and Person0.gender = $param and neo4j.fid = Forum0.id and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.ciid = City0.id
##########
MATCH (p1:Person1)-[:KNOWS]->(p2:Person1)-[:LIKES]->(m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN t.id as tid, p1.id as p1id, p2.id as p2id, tc.id as tcid, m.id as mid
**********
select Person0.firstName, Message0.content, Tag0.name, neo4j.p2id
from neo4j,TagClass TagClass0, Message Message0, Person Person0, Person Person1, Tag Tag0
where Person1.firstName = $param and TagClass0.name = $param and neo4j.tcid = TagClass0.id and neo4j.mid = Message0.id and neo4j.p2id = Person0.id and neo4j.p1id = Person1.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(pl:Place)

RETURN pl.id as plid, c.id as cid, p.id as pid
**********
select Place0.name, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Company Company0, Person Person0, Place Place0
where Place0.name = $param and Person0.firstName = $param and neo4j.cid = Company0.id and neo4j.pid = Person0.id and neo4j.plid = Place0.id
##########
MATCH (p:Person1)-[:KNOWS]->(p2:Person)-[:STUDY_AT]->(u:University)

RETURN u.id as uid, p2.id as p2id, p.id as pid
**********
select Person1.firstName, Person1.lastName, Person0.firstName, University0.name, Person0.lastName
from neo4j,University University0, Person Person0, Person Person1
where Person0.birthday < $param and University0.name = $param and neo4j.uid = University0.id and neo4j.pid = Person0.id and neo4j.p2id = Person1.id
##########
MATCH (m:Message2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN t.id as tid, tc.id as tcid, m.id as mid
**********
select TagClass0.name, neo4j.mid, Message0.content, Tag0.name
from neo4j,Message Message0, TagClass TagClass0, Tag Tag0
where TagClass0.name = $param and Message0.content CONTAINS $param and neo4j.mid = Message0.id and neo4j.tcid = TagClass0.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person)-[:WORK_AT]->(o:Organisation)-[:IS_LOCATED_IN]->(ci:City)

RETURN ci.id as ciid, o.id as oid, p.id as pid
**********
select Organisation0.name, Person0.lastName, City0.name, Person0.firstName
from neo4j,Organisation Organisation0, City City0, Person Person0
where City0.name = $param and Person0.browserUsed = $param and neo4j.oid = Organisation0.id and neo4j.ciid = City0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN tc.id as tcid, p.id as pid, t.id as tid
**********
select TagClass0.name, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Person Person0, Tag Tag0, TagClass TagClass0
where TagClass0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.tid = Tag0.id and neo4j.tcid = TagClass0.id
##########
MATCH (f:Forum2)-[:HAS_MEMBER]->(p:Person1)-[:IS_LOCATED_IN]->(ct:City)

RETURN ct.id as ctid, p.id as pid, f.id as fid
**********
select Forum0.title, City0.name, Person0.lastName, Person0.firstName
from neo4j,City City0, Person Person0, Forum Forum0
where Forum0.title = $param and City0.name = $param and neo4j.ctid = City0.id and neo4j.pid = Person0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(ct:City)

RETURN org.id as orgid, ct.id as ctid, p.id as pid
**********
select Organisation0.name, City0.name, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Organisation Organisation0, City City0
where Organisation0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.orgid = Organisation0.id and neo4j.ctid = City0.id
##########
MATCH (msg:Message1)-[:REPLY_OF]->(post:Post1)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, post.id as postid, msg.id as msgid
**********
select Message0.content, Post0.content, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Person Person0, Post Post0
where Post0.locationIP = $param and Message0.creationDate > $param and neo4j.msgid = Message0.id and neo4j.creatorid = Person0.id and neo4j.postid = Post0.id
##########
MATCH (post:Post2)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)-[:IS_SUBCLASS_OF]->(superClass:TagClass)

RETURN tagClass.id as tagClassid, tag.id as tagid, superClass.id as superClassid, post.id as postid
**********
select Tag0.name, TagClass0.name, Post0.content, TagClass1.name
from neo4j,TagClass TagClass0, Post Post0, TagClass TagClass1, Tag Tag0
where Post0.creationDate > $param and TagClass0.name = $param and neo4j.tagClassid = TagClass0.id and neo4j.postid = Post0.id and neo4j.superClassid = TagClass1.id and neo4j.tagid = Tag0.id
##########
MATCH (p:Person)-[:KNOWS]->(friend:Person)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(city:City)

RETURN friend.id as friendid, org.id as orgid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, Person1.lastName, Person0.firstName, Person1.firstName, Person0.lastName
from neo4j,Person Person0, City City0, Person Person1, Organisation Organisation0
where Person1.birthday < $param and City0.name = $param and neo4j.pid = Person0.id and neo4j.cityid = City0.id and neo4j.friendid = Person1.id and neo4j.orgid = Organisation0.id
##########
MATCH (c:City)<-[:IS_LOCATED_IN]-(o:Organisation)<-[:WORK_AT]-(p:Person1)-[:HAS_INTEREST]->(t:Tag)

RETURN c.id as cid, p.id as pid, t.id as tid
**********
select Person0.firstName, Person0.lastName, neo4j.pid
from neo4j,Tag Tag0, City City0, Person Person0
where Tag0.name = $param and City0.name = $param and neo4j.tid = Tag0.id and neo4j.cid = City0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(comp:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN country.id as countryid, p.id as pid, comp.id as compid
**********
select Country0.name, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Company Company0, Country Country0, Person Person0
where Country0.name = $param and Person0.speaks CONTAINS $param and Person0.browserUsed = $param and neo4j.compid = Company0.id and neo4j.countryid = Country0.id and neo4j.pid = Person0.id
##########
MATCH (forum:Forum1)-[:HAS_MEMBER]->(member:Person1)-[:STUDY_AT]->(uni:University)

RETURN uni.id as uniid, member.id as memberid, forum.id as forumid
**********
select Forum0.title, Person0.lastName, University0.name, Person0.firstName
from neo4j,University University0, Person Person0, Forum Forum0
where University0.name = $param and Forum0.creationDate > $param and neo4j.uniid = University0.id and neo4j.memberid = Person0.id and neo4j.forumid = Forum0.id
##########
MATCH (forum:Forum1)-[:CONTAINER_OF]->(post:Post2)-[:HAS_TAG]->(tag:Tag)

RETURN post.id as postid, forum.id as forumid, tag.id as tagid
**********
select Forum0.title, Tag0.name, Post0.content
from neo4j,Post Post0, Forum Forum0, Tag Tag0
where Forum0.title = $param and Tag0.name = $param and neo4j.postid = Post0.id and neo4j.forumid = Forum0.id and neo4j.tagid = Tag0.id
##########
MATCH (person:Person)-[:KNOWS]->(friend:Person)-[:LIKES]->(post:Post2)-[:HAS_CREATOR]->(creator:Person)

RETURN friend.id as friendid, person.id as personid, creator.id as creatorid, post.id as postid
**********
select Person2.firstName, Post0.content, Person2.lastName
from neo4j,Person Person0, Person Person1, Post Post0, Person Person2
where Person1.locationIP = $param and Person0.email = $param and neo4j.personid = Person0.id and neo4j.creatorid = Person1.id and neo4j.postid = Post0.id and neo4j.friendid = Person2.id
##########
MATCH (p:Person)-[:LIKES]->(m:Message2)<-[:REPLY_OF]-(cm:Comment2)-[:HAS_TAG]->(t:Tag)

RETURN p.id as pid, cm.id as cmid, t.id as tid
**********
select Comment0.content, neo4j.cmid
from neo4j,Person Person0, Tag Tag0, Comment Comment0
where Tag0.name = $param and Person0.email = $param and neo4j.pid = Person0.id and neo4j.tid = Tag0.id and neo4j.cmid = Comment0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(:Tag)<-[:HAS_TAG]-(msg:Message2)-[:REPLY_OF*1..2]->(post:Post2)

RETURN msg.id as msgid, p.id as pid, post.title as posttitle
**********
select Message0.content, neo4j.posttitle, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Message Message0
where Message0.length < $param and Person0.speaks = $param and neo4j.pid = Person0.id and neo4j.msgid = Message0.id
##########
MATCH (msg:Message1)-[:HAS_CREATOR]->(creator:Person)-[:IS_LOCATED_IN]->(city:City)

RETURN creator.id as creatorid, msg.id as msgid, city.id as cityid
**********
select Message0.content, Person0.lastName, neo4j.msgid, Person0.firstName
from neo4j,City City0, Person Person0, Message Message0
where Message0.creationDate > $param and City0.name = $param and neo4j.cityid = City0.id and neo4j.creatorid = Person0.id and neo4j.msgid = Message0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)

RETURN org.id as orgid, country.id as countryid, city.id as cityid
**********
select Organisation0.name, City0.name, Country0.name
from neo4j,Organisation Organisation0, City City0, Country Country0
where Country0.name = $param and City0.name = $param and neo4j.orgid = Organisation0.id and neo4j.cityid = City0.id and neo4j.countryid = Country0.id
##########
MATCH (person:Person1)-[:STUDY_AT]->(univ:University)-[:IS_LOCATED_IN]->(city:City)

RETURN person.id as personid, univ.id as univid, city.id as cityid
**********
select City0.name, University0.name, Person0.lastName, Person0.firstName
from neo4j,City City0, Person Person0, University University0
where Person0.speaks = $param and City0.name = $param and neo4j.cityid = City0.id and neo4j.personid = Person0.id and neo4j.univid = University0.id
##########
MATCH (univ:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(person:Person1)

RETURN person.id as personid, univ.id as univid, city.id as cityid
**********
select University0.name, City0.name, Person0.lastName, Person0.firstName
from neo4j,City City0, Person Person0, University University0
where Person0.gender = $param and neo4j.cityid = City0.id and neo4j.personid = Person0.id and neo4j.univid = University0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(uni:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(org:Organisation)

RETURN org.id as orgid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, Person0.lastName, Person0.firstName
from neo4j,Organisation Organisation0, Person Person0, City City0
where Person0.birthday < $param and Organisation0.name = $param and neo4j.orgid = Organisation0.id and neo4j.pid = Person0.id and neo4j.cityid = City0.id
##########
MATCH (cmt:Comment2)-[:HAS_TAG]->(tag:Tag)<-[:HAS_TAG]-(post:Post1)

RETURN tag.id as tagid, post.id as postid, cmt.id as cmtid
**********
select Tag0.name, Post0.content, Comment0.content
from neo4j,Post Post0, Comment Comment0, Tag Tag0
where Post0.length > $param and Comment0.creationDate < $param and neo4j.postid = Post0.id and neo4j.cmtid = Comment0.id and neo4j.tagid = Tag0.id
##########
MATCH (p:Person1)-[:LIKES]->(comment:Comment1)-[:REPLY_OF]->(post:Post1)-[:HAS_CREATOR]->(creator:Person)

RETURN creator.id as creatorid, comment.id as commentid, p.id as pid, post.title as posttitle
**********
select Comment0.content, neo4j.posttitle, Person1.lastName, Person1.firstName
from neo4j,Person Person0, Person Person1, Comment Comment0
where Person1.email = $param and Person0.birthday > $param and neo4j.creatorid = Person0.id and neo4j.pid = Person1.id and neo4j.commentid = Comment0.id
##########
MATCH (post:Post2)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)

RETURN tagClass.id as tagClassid, tag.id as tagid, post.id as postid
**********
select neo4j.postid, Tag0.name, Post0.content
from neo4j,Post Post0, TagClass TagClass0, Tag Tag0
where Post0.creationDate > $param and TagClass0.name = $param and neo4j.postid = Post0.id and neo4j.tagClassid = TagClass0.id and neo4j.tagid = Tag0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)
RETURN org.id as orgid, country.id as countryid, city.id as cityid
**********
select Organisation0.name, City0.name, Country0.name
from neo4j,City City0, Country Country0, Organisation Organisation0
where Country0.name = $param and neo4j.cityid = City0.id and neo4j.countryid = Country0.id and neo4j.orgid = Organisation0.id
##########
MATCH (msg:Message1)-[:REPLY_OF*2]->(post:Post2)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, msg.id as msgid, post.title as posttitle
**********
select Message0.content, neo4j.posttitle, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Person Person0
where Message0.creationDate > $param and neo4j.msgid = Message0.id and neo4j.creatorid = Person0.id
##########
MATCH (forum:Forum1)-[:CONTAINER_OF]->(msg:Message2)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, msg.id as msgid, forum.id as forumid
**********
select Message0.content, Forum0.title, Person0.lastName, Person0.firstName
from neo4j,Forum Forum0, Person Person0, Message Message0
where Message0.browserUsed = $param and Person0.speaks CONTAINS $param and neo4j.forumid = Forum0.id and neo4j.creatorid = Person0.id and neo4j.msgid = Message0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(uni:University)-[:IS_LOCATED_IN]->(place:Place)

RETURN uni.id as uniid, place.id as placeid, p.id as pid
**********
select Person0.lastName, Place0.name, Person0.firstName
from neo4j,Place Place0, University University0, Person Person0
where Person0.email CONTAINS $param and University0.name = $param and neo4j.placeid = Place0.id and neo4j.uniid = University0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(univ:University)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, univ.id as univid, p.id as pid
**********
select University0.name, Person0.lastName, Place0.name, Person0.firstName
from neo4j,Place Place0, University University0, Person Person0
where Person0.email CONTAINS $param and neo4j.placeid = Place0.id and neo4j.univid = University0.id and neo4j.pid = Person0.id
##########
MATCH (msg:Message1)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)

RETURN tagClass.id as tagClassid, msg.id as msgid, tag.id as tagid
**********
select Message0.content, Tag0.name, TagClass0.name
from neo4j,Message Message0, TagClass TagClass0, Tag Tag0
where Message0.locationIP = $param and neo4j.msgid = Message0.id and neo4j.tagClassid = TagClass0.id and neo4j.tagid = Tag0.id
##########
MATCH (p:Person)-[:KNOWS]->(friend:Person1)-[:STUDY_AT]->(uni:University)-[:IS_LOCATED_IN]->(city:City)

RETURN friend.id as friendid, p.id as pid, city.id as cityid
**********
select Person0.firstName, Person1.lastName, Person0.lastName, Person1.firstName
from neo4j,Person Person0, City City0, Person Person1
where Person1.locationIP = $param and City0.name = $param and neo4j.friendid = Person0.id and neo4j.cityid = City0.id and neo4j.pid = Person1.id
##########
MATCH (comp1:Company)-[:IS_LOCATED_IN]->(country:Country)<-[:IS_LOCATED_IN]-(comp2:Company)

RETURN comp2.id as comp2id, country.id as countryid, comp1.id as comp1id
**********
select Company1.name, Company0.name
from neo4j,Country Country0, Company Company0, Company Company1
where Country0.name = $param and Company0.name = $param and neo4j.countryid = Country0.id and neo4j.comp1id = Company0.id and neo4j.comp2id = Company1.id
##########
MATCH (person:Person)-[:HAS_CREATOR]-(msg:Message2)<-[:REPLY_OF*]-(cmt:Comment2)

RETURN person.id as personid, msg.id as msgid, cmt.id as cmtid
**********
select Message0.content, Person0.lastName, Comment0.content, Person0.firstName
from neo4j,Person Person0, Comment Comment0, Message Message0
where Person0.gender = $param and Comment0.length < $param and neo4j.personid = Person0.id and neo4j.cmtid = Comment0.id and neo4j.msgid = Message0.id
##########
MATCH (p:Person1)-[:KNOWS*2..3]-(friend:Person1)

RETURN friend.id as friendid, p.id as pid
**********
select Person1.email, Person1.firstName, Person1.lastName
from neo4j,Person Person0, Person Person1
where Person0.firstName = $param and Person1.gender = $param and neo4j.pid = Person0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(m:Message2)

RETURN place.id as placeid, p.id as pid, m.id as mid
**********
select Message0.length, Message0.content, Place0.name
from neo4j,Person Person0, Place Place0, Message Message0
where Person0.speaks CONTAINS $param and Message0.browserUsed = $param and neo4j.pid = Person0.id and neo4j.placeid = Place0.id and neo4j.mid = Message0.id
##########
MATCH (fo:Forum)-[:CONTAINER_OF]->(m:Message2)-[:HAS_CREATOR]->(p:Person)-[:IS_LOCATED_IN]->(place:Place)

RETURN fo.id as foid, place.id as placeid, p.id as pid, m.id as mid
**********
select Person0.firstName, Place0.name, Forum0.title, Message0.content, Person0.lastName
from neo4j,Person Person0, Message Message0, Place Place0, Forum Forum0
where Forum0.creationDate > $param and neo4j.pid = Person0.id and neo4j.mid = Message0.id and neo4j.placeid = Place0.id and neo4j.foid = Forum0.id
##########
MATCH (univ:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(p:Person1)-[:WORK_AT]->(comp:Company)

RETURN univ.id as univid, p.id as pid, comp.id as compid
**********
select Person0.email, Person0.lastName, Person0.firstName
from neo4j,Person Person0, University University0, Company Company0
where Company0.name = $param and University0.name = $param and neo4j.pid = Person0.id and neo4j.univid = University0.id and neo4j.compid = Company0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(country:Country)<-[:IS_LOCATED_IN]-(msg:Message1)

RETURN org.id as orgid, msg.id as msgid, country.id as countryid
**********
select Organisation0.name, Country0.name, Message0.content
from neo4j,Organisation Organisation0, Country Country0, Message Message0
where Organisation0.name = $param and Message0.length < $param and neo4j.orgid = Organisation0.id and neo4j.countryid = Country0.id and neo4j.msgid = Message0.id
##########
MATCH (forum:Forum1)-[:HAS_MEMBER]->(person:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(comment:Comment2)-[:REPLY_OF]->(post:Post2)

RETURN person.id as personid, comment.id as commentid, post.id as postid, forum.id as forumid
**********
select Person0.lastName, Post0.content, Person0.firstName
from neo4j,Comment Comment0, Person Person0, Post Post0, Forum Forum0
where Forum0.title = $param and Comment0.length > $param and neo4j.commentid = Comment0.id and neo4j.personid = Person0.id and neo4j.postid = Post0.id and neo4j.forumid = Forum0.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(m:Message1)-[:HAS_TAG]->(t:Tag)

RETURN t.id as tid, c.id as cid, m.id as mid
**********
select Message0.content, Tag0.name, Comment0.content
from neo4j,Comment Comment0, Message Message0, Tag Tag0
where Tag0.name = $param and Message0.creationDate > $param and neo4j.cid = Comment0.id and neo4j.mid = Message0.id and neo4j.tid = Tag0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(uni:University)<-[:STUDY_AT]-(student:Person1)

RETURN student.id as studentid, org.id as orgid
**********
select Person0.lastName, Person0.firstName, neo4j.studentid
from neo4j,Person Person0, Organisation Organisation0
where Organisation0.name = $param and Person0.birthday < $param and neo4j.studentid = Person0.id and neo4j.orgid = Organisation0.id
##########
MATCH (f:Forum)-[:CONTAINER_OF]->(p:Post2)-[:HAS_TAG]->(yh:Tag)<-[:HAS_INTEREST]-(person:Person1)

RETURN yh.id as yhid, p.id as pid, f.id as fid
**********
select Post0.creationDate, Post0.content, neo4j.pid
from neo4j,Post Post0, Tag Tag0, Forum Forum0
where Tag0.name = $param and Forum0.creationDate > $param and neo4j.pid = Post0.id and neo4j.yhid = Tag0.id and neo4j.fid = Forum0.id
##########
MATCH (c:Comment2)-[:REPLY_OF*1..2]->(m:Message1)-[:HAS_CREATOR]->(p:Person1)

RETURN c.id as cid, p.id as pid
**********
select Comment0.creationDate, Comment0.content, neo4j.cid
from neo4j,Person Person0, Comment Comment0
where Person0.locationIP = $param and Comment0.creationDate > $param and neo4j.pid = Person0.id and neo4j.cid = Comment0.id
##########
MATCH (msg:Message2)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_PART_OF]-(country:Country)

RETURN msg.id as msgid, country.id as countryid
**********
select Message0.content, Message0.creationDate, neo4j.msgid
from neo4j,Message Message0, Country Country0
where Message0.browserUsed = $param and Country0.name = $param and neo4j.msgid = Message0.id and neo4j.countryid = Country0.id
##########
MATCH (comment:Comment1)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)<-[:IS_SUBCLASS_OF]-(parentClass:TagClass)

RETURN tagClass.id as tagClassid, comment.id as commentid
**********
select neo4j.commentid, Comment0.creationDate, Comment0.content
from neo4j,TagClass TagClass0, Comment Comment0
where TagClass0.name = $param and neo4j.tagClassid = TagClass0.id and neo4j.commentid = Comment0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)

RETURN u.id as uid, country.id as countryid, p.id as pid, city.id as cityid
**********
select City0.name, Person0.firstName, University0.name, Country0.name, Person0.lastName
from neo4j,City City0, Country Country0, University University0, Person Person0
where Person0.birthday > $param and neo4j.cityid = City0.id and neo4j.countryid = Country0.id and neo4j.uid = University0.id and neo4j.pid = Person0.id
##########
MATCH (tc:TagClass)-[:IS_SUBCLASS_OF*1..]->(:TagClass)-[:HAS_TYPE]-(tag:Tag)<-[:HAS_TAG]-(post:Post1)-[:HAS_CREATOR]->(p:Person1)

RETURN post.id as postid, p.id as pid
**********
select Post0.creationDate, neo4j.postid, Post0.content
from neo4j,Person Person0, Post Post0
where Person0.gender = $param and neo4j.pid = Person0.id and neo4j.postid = Post0.id
##########
MATCH (m:Message1)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN t.id as tid, tc.id as tcid, m.id as mid
**********
select TagClass0.name, neo4j.mid, Message0.content, Tag0.name
from neo4j,TagClass TagClass0, Tag Tag0, Message Message0
where TagClass0.name = $param and Message0.creationDate > $param and neo4j.tcid = TagClass0.id and neo4j.tid = Tag0.id and neo4j.mid = Message0.id
##########
MATCH (person:Person1)-[:HAS_INTEREST]->(:Tag)<-[:HAS_TAG]-(c:Comment2)-[:REPLY_OF*1..]->(m:Message2)-[:HAS_CREATOR]->(creator:Person1)

RETURN person.id as personid, creator.id as creatorid
**********
select neo4j.creatorid, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Person Person1
where Person1.firstName = $param and neo4j.creatorid = Person0.id and neo4j.personid = Person1.id
##########
MATCH (p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(r:City)<-[:IS_LOCATED_IN]-(org:Organisation)

RETURN r.id as rid, org.id as orgid, p.id as pid
**********
select Organisation0.name, neo4j.orgid
from neo4j,Person Person0, City City0, Organisation Organisation0
where City0.name = $param and Person0.speaks = $param and neo4j.pid = Person0.id and neo4j.rid = City0.id and neo4j.orgid = Organisation0.id
##########
MATCH (p:Person)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(ig:Country)

RETURN ig.id as igid, p.id as pid
**********
select Person0.firstName, Person0.lastName, neo4j.pid
from neo4j,Person Person0, Country Country0
where Country0.name = $param and Person0.browserUsed = $param and neo4j.pid = Person0.id and neo4j.igid = Country0.id
##########
MATCH (person:Person1)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(country:Country)-[:IS_PART_OF]->(continent:Continent)

RETURN company.id as companyid, person.id as personid, continent.id as continentid, country.id as countryid
**********
select Continent0.name, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Country Country0, Person Person0, Company Company0, Continent Continent0
where Country0.name = $param and Person0.gender = $param and neo4j.countryid = Country0.id and neo4j.personid = Person0.id and neo4j.companyid = Company0.id and neo4j.continentid = Continent0.id
##########
MATCH (msg:Message1)-[:HAS_TAG]->(:Tag)<-[:HAS_TAG]-(related:Message1)

RETURN msg.id as msgid, related.id as relatedid
**********
select Message0.content, Message1.content
from neo4j,Message Message0, Message Message1
where Message1.browserUsed = $param and Message0.locationIP = $param and neo4j.msgid = Message0.id and neo4j.relatedid = Message1.id
##########
MATCH (forum:Forum1)-[:CONTAINER_OF]->(post:Post1)-[:HAS_TAG]->(qo:Tag)

RETURN qo.id as qoid, forum.id as forumid, post.id as postid
**********
select Forum0.title, Post0.content
from neo4j,Tag Tag0, Post Post0, Forum Forum0
where Tag0.name = $param and Forum0.creationDate > $param and neo4j.qoid = Tag0.id and neo4j.postid = Post0.id and neo4j.forumid = Forum0.id
##########
MATCH (person:Person)-[:HAS_INTEREST]->(tag:Tag)-[:HAS_TYPE]->(t:TagClass)

RETURN person.id as personid, tag.id as tagid, t.id as tid
**********
select Tag0.name, Person0.lastName, Person0.firstName
from neo4j,Tag Tag0, TagClass TagClass0, Person Person0
where TagClass0.name = $param and Person0.birthday < $param and neo4j.tagid = Tag0.id and neo4j.tid = TagClass0.id and neo4j.personid = Person0.id
##########
MATCH (person:Person1)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(n:Country)

RETURN company.id as companyid, person.id as personid, n.id as nid
**********
select Person0.lastName, Company0.name, Person0.firstName
from neo4j,Country Country0, Company Company0, Person Person0
where Country0.name = $param and Person0.gender = $param and neo4j.nid = Country0.id and neo4j.companyid = Company0.id and neo4j.personid = Person0.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(m:Message1)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN m.id as mid, tc.id as tcid, f.id as fid, t.id as tid
**********
select neo4j.fid, Tag0.name, TagClass0.name, Forum0.title, Message0.content
from neo4j,Tag Tag0, Forum Forum0, Message Message0, TagClass TagClass0
where Forum0.title = $param and TagClass0.name = $param and neo4j.tid = Tag0.id and neo4j.fid = Forum0.id and neo4j.mid = Message0.id and neo4j.tcid = TagClass0.id
##########
MATCH (msg:Message2)-[:REPLY_OF]->(origMsg:Post2)-[:HAS_CREATOR]->(creator:Person)

RETURN creator.id as creatorid, msg.id as msgid, origMsg.id as origMsgid
**********
select Person0.firstName, Message0.content, neo4j.origMsgid, neo4j.msgid, Person0.lastName
from neo4j,Message Message0, Person Person0
where Message0.content CONTAINS $param and Person0.birthday > $param and neo4j.msgid = Message0.id and neo4j.creatorid = Person0.id
##########
MATCH (per:Person)-[:KNOWS]->(friend:Person)-[:STUDY_AT]->(u:University)

RETURN friend.id as friendid, per.id as perid, u.id as uid
**********
select Person1.firstName, Person0.firstName, University0.name, neo4j.perid
from neo4j,University University0, Person Person0, Person Person1
where Person0.gender = $param and Person1.email = $param and neo4j.uid = University0.id and neo4j.friendid = Person0.id and neo4j.perid = Person1.id
##########
MATCH (company:Company)<-[:WORK_AT]-(person:Person1)-[:KNOWS]-(friend:Person1)-[:STUDY_AT]->(uni:University)

RETURN uni.id as uniid, friend.id as friendid, company.id as companyid, person.id as personid
**********
select University0.name, Person0.lastName, Company0.name, Person0.firstName, Person1.lastName, Person1.firstName
from neo4j,Company Company0, Person Person0, Person Person1, University University0
where University0.name = $param and Company0.name = $param and neo4j.companyid = Company0.id and neo4j.friendid = Person0.id and neo4j.personid = Person1.id and neo4j.uniid = University0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person1)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, u.id as uid, p.id as pid, f.id as fid
**********
select Person0.firstName, University0.name, Place0.name, Forum0.title, Person0.lastName
from neo4j,Place Place0, Forum Forum0, University University0, Person Person0
where Forum0.creationDate > $param and Place0.name = $param and neo4j.placeid = Place0.id and neo4j.fid = Forum0.id and neo4j.uid = University0.id and neo4j.pid = Person0.id
##########
MATCH (t:Tag)<-[:HAS_TAG]-(m:Message1)<-[:REPLY_OF]-(comment:Comment2)-[:HAS_CREATOR]->(p:Person)

RETURN m.id as mid, comment.id as commentid, p.id as pid, t.id as tid
**********
select Person0.firstName, neo4j.commentid, Tag0.name, neo4j.mid, Person0.lastName
from neo4j,Tag Tag0, Person Person0, Message Message0
where Tag0.name = $param and Message0.creationDate < $param and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (person:Person1)-[:LIKES]->(msg:Message1)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)

RETURN tagClass.id as tagClassid, person.id as personid, msg.id as msgid, tag.id as tagid
**********
select Message0.content, Tag0.name, TagClass0.name, Person0.lastName, Person0.firstName
from neo4j,TagClass TagClass0, Tag Tag0, Message Message0, Person Person0
where Person0.gender = $param and TagClass0.name = $param and neo4j.tagClassid = TagClass0.id and neo4j.tagid = Tag0.id and neo4j.msgid = Message0.id and neo4j.personid = Person0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:WORK_AT]->(company:Company)

RETURN friend.id as friendid, company.id as companyid, p.id as pid
**********
select neo4j.companyid, Company0.name, Person1.firstName, Person0.firstName, neo4j.friendid, neo4j.pid
from neo4j,Company Company0, Person Person0, Person Person1
where Person1.firstName = $param and Person0.gender = $param and neo4j.companyid = Company0.id and neo4j.friendid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (person:Person)-[:HAS_CREATOR]-(msg:Message1)-[:IS_LOCATED_IN]->(country:Country)

RETURN person.id as personid, msg.id as msgid, country.id as countryid
**********
select Message0.content, Country0.name, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Person Person0, Country Country0
where Country0.name = $param and Person0.email = $param and neo4j.msgid = Message0.id and neo4j.personid = Person0.id and neo4j.countryid = Country0.id
##########
MATCH (msg:Message2)-[:REPLY_OF*]->(original:Post1)<-[:CONTAINER_OF]-(forum:Forum2)

RETURN msg.id as msgid, original.id as originalid, forum.id as forumid
**********
select Message0.content, Forum0.title, Post0.content
from neo4j,Forum Forum0, Message Message0, Post Post0
where Message0.creationDate > $param and Forum0.title = $param and neo4j.forumid = Forum0.id and neo4j.msgid = Message0.id and neo4j.originalid = Post0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(country:Country)

RETURN org.id as orgid, country.id as countryid, p.id as pid
**********
select Organisation0.name, neo4j.orgid, Person0.firstName, Country0.name, neo4j.countryid, neo4j.pid
from neo4j,Organisation Organisation0, Country Country0, Person Person0
where Country0.name = $param and Person0.gender = $param and neo4j.orgid = Organisation0.id and neo4j.countryid = Country0.id and neo4j.pid = Person0.id
##########
MATCH (c:Comment1)-[:REPLY_OF*1..3]->(root:Post2)-[:HAS_CREATOR]->(creator:Person1)

RETURN root.title as roottitle, creator.id as creatorid, c.id as cid
**********
select neo4j.roottitle, Person0.lastName, Person0.firstName, Comment0.content
from neo4j,Comment Comment0, Person Person0
where Comment0.creationDate > $param and Person0.birthday < $param and neo4j.cid = Comment0.id and neo4j.creatorid = Person0.id
##########
MATCH (forum:Forum)-[:HAS_MODERATOR]->(mod:Person1)-[:KNOWS]->(friend:Person)

RETURN mod.id as modid, friend.id as friendid, forum.id as forumid
**********
select Forum0.title, neo4j.modid, neo4j.forumid, Person1.firstName, Person0.firstName, neo4j.friendid
from neo4j,Forum Forum0, Person Person0, Person Person1
where Person0.gender = $param and Forum0.title = $param and neo4j.forumid = Forum0.id and neo4j.modid = Person0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person1)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(place:Place)

RETURN company.id as companyid, place.id as placeid, p.id as pid
**********
select neo4j.companyid, Company0.name, Person0.firstName, Place0.name, neo4j.pid, neo4j.placeid
from neo4j,Place Place0, Person Person0, Company Company0
where Company0.name = $param and Person0.browserUsed = $param and neo4j.placeid = Place0.id and neo4j.pid = Person0.id and neo4j.companyid = Company0.id
##########
MATCH (p:Person1)-[:LIKES]->(msg:Message1)-[:HAS_TAG]->(tag:Tag)

RETURN msg.id as msgid, p.id as pid, tag.id as tagid
**********
select neo4j.tagid, Message0.content, Person0.firstName, Tag0.name, neo4j.msgid, neo4j.pid
from neo4j,Person Person0, Tag Tag0, Message Message0
where Person0.birthday > $param and Tag0.name = $param and neo4j.pid = Person0.id and neo4j.tagid = Tag0.id and neo4j.msgid = Message0.id
##########
MATCH (f:Forum2)-[:CONTAINER_OF]->(m:Message1)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN t.id as tid, tc.id as tcid, f.id as fid, m.id as mid
**********
select Forum0.title, Message0.content, Tag0.name
from neo4j,Tag Tag0, TagClass TagClass0, Message Message0, Forum Forum0
where TagClass0.name = $param and Forum0.creationDate > $param and neo4j.tid = Tag0.id and neo4j.tcid = TagClass0.id and neo4j.mid = Message0.id and neo4j.fid = Forum0.id
##########
MATCH (p1:Person1)-[:KNOWS]->(p2:Person1)-[:WORK_AT]->(c:Company)

RETURN p1.id as p1id, p2.id as p2id, c.id as cid
**********
select Person1.firstName, Company0.name, Person0.lastName, Person1.lastName, Person0.firstName
from neo4j,Person Person0, Company Company0, Person Person1
where Person0.speaks = $param and Company0.name = $param and neo4j.p1id = Person0.id and neo4j.cid = Company0.id and neo4j.p2id = Person1.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)-[:IS_SUBCLASS_OF]->(super:TagClass)

RETURN super.id as superid, tc.id as tcid, p.id as pid, t.id as tid
**********
select Person0.firstName, TagClass0.name, Tag0.name, TagClass1.name, Person0.lastName
from neo4j,Person Person0, Tag Tag0, TagClass TagClass0, TagClass TagClass1
where TagClass0.name = $param and TagClass1.name = $param and neo4j.pid = Person0.id and neo4j.tid = Tag0.id and neo4j.superid = TagClass0.id and neo4j.tcid = TagClass1.id
##########
MATCH (p:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)

RETURN org.id as orgid, country.id as countryid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, Person0.firstName, Country0.name, Person0.lastName
from neo4j,Country Country0, Organisation Organisation0, City City0, Person Person0
where Person0.gender = $param and City0.name = $param and neo4j.countryid = Country0.id and neo4j.orgid = Organisation0.id and neo4j.cityid = City0.id and neo4j.pid = Person0.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(msg:Message1)-[:HAS_CREATOR]->(creator:Person)

RETURN creator.id as creatorid, msg.id as msgid, f.id as fid
**********
select Message0.content, Forum0.title, Person0.lastName, Person0.firstName
from neo4j,Forum Forum0, Message Message0, Person Person0
where Person0.email CONTAINS $param and Forum0.creationDate < $param and neo4j.fid = Forum0.id and neo4j.msgid = Message0.id and neo4j.creatorid = Person0.id
##########
MATCH (tc:TagClass)<-[:HAS_TYPE]-(t:Tag)<-[:HAS_TAG]-(msg:Message2)<-[:REPLY_OF]-(c:Comment2)

RETURN msg.id as msgid, tc.id as tcid, c.id as cid, t.id as tid
**********
select Message0.content, Tag0.name, Comment0.content
from neo4j,TagClass TagClass0, Tag Tag0, Message Message0, Comment Comment0
where TagClass0.name = $param and Comment0.creationDate > $param and neo4j.tcid = TagClass0.id and neo4j.tid = Tag0.id and neo4j.msgid = Message0.id and neo4j.cid = Comment0.id
##########
MATCH (org:Organisation)<-[:WORK_AT]-(p:Person1)-[:KNOWS]->(friend:Person)-[:LIKES]->(post:Post1)

RETURN friend.id as friendid, org.id as orgid, post.id as postid, p.id as pid
**********
select Person0.lastName, Person1.lastName, Person0.firstName, Person1.firstName, Post0.content
from neo4j,Person Person0, Organisation Organisation0, Person Person1, Post Post0
where Post0.creationDate > $param and Organisation0.name = $param and neo4j.pid = Person0.id and neo4j.orgid = Organisation0.id and neo4j.friendid = Person1.id and neo4j.postid = Post0.id
##########
MATCH (p:Person)-[:LIKES]->(msg:Message1)-[:HAS_CREATOR]->(creator:Person1)-[:IS_LOCATED_IN]->(place:Place)

RETURN creator.id as creatorid, place.id as placeid, msg.id as msgid, p.id as pid
**********
select Person0.firstName, Message0.content, Person1.firstName, Place0.name, Person1.lastName, Person0.lastName
from neo4j,Person Person0, Message Message0, Place Place0, Person Person1
where Person1.locationIP = $param and Message0.length > $param and neo4j.creatorid = Person0.id and neo4j.msgid = Message0.id and neo4j.placeid = Place0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(forum:Forum2)-[:HAS_MODERATOR]->(moderator:Person)

RETURN moderator.id as moderatorid, tag.id as tagid, forum.id as forumid, p.id as pid
**********
select Forum0.title, Person1.lastName, Person1.firstName, Person0.firstName, Person0.lastName
from neo4j,Tag Tag0, Forum Forum0, Person Person0, Person Person1
where Person1.locationIP = $param and Tag0.name = $param and neo4j.tagid = Tag0.id and neo4j.forumid = Forum0.id and neo4j.moderatorid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person1)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(country:Country), (p)-[:KNOWS]->(friend:Person1)
RETURN friend.id as friendid, c.id as cid, country.id as countryid, p.id as pid
**********
select Company0.name, Person1.lastName, Person0.firstName, Person1.firstName, Person0.lastName
from neo4j,Company Company0, Person Person0, Country Country0, Person Person1
where Country0.name = $param and neo4j.cid = Company0.id and neo4j.pid = Person0.id and neo4j.countryid = Country0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(:Tag)<-[:HAS_TAG]-(msg:Message1)-[:REPLY_OF]->(comment:Comment2)

RETURN comment.id as commentid, msg.id as msgid, p.id as pid
**********
select Comment0.content, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Comment Comment0, Message Message0
where Person0.speaks CONTAINS $param and Message0.length > $param and neo4j.pid = Person0.id and neo4j.commentid = Comment0.id and neo4j.msgid = Message0.id
##########
MATCH (c:City)<-[:IS_LOCATED_IN]-(org:Organisation)<-[:WORK_AT]-(p:Person1)

RETURN org.id as orgid, c.id as cid, p.id as pid
**********
select Organisation0.name, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Organisation Organisation0, City City0
where Organisation0.name = $param and City0.name = $param and neo4j.pid = Person0.id and neo4j.orgid = Organisation0.id and neo4j.cid = City0.id
##########
MATCH (p:Person)-[:LIKES]->(post:Post2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)
RETURN post.id as postid, tc.id as tcid, p.id as pid, t.id as tid
**********
select Post0.content, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Tag Tag0, TagClass TagClass0, Person Person0, Post Post0
where TagClass0.name = $param and neo4j.tid = Tag0.id and neo4j.tcid = TagClass0.id and neo4j.pid = Person0.id and neo4j.postid = Post0.id
##########
MATCH (m:Message2)-[:HAS_TAG]->(tag:Tag)<-[:HAS_TAG]-(:Message2)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, tag.id as tagid, m.id as mid
**********
select Person0.lastName, Message0.content, Message0.creationDate, Person0.firstName
from neo4j,Tag Tag0, Message Message0, Person Person0
where Person0.birthday < $param and Tag0.name = $param and neo4j.tagid = Tag0.id and neo4j.mid = Message0.id and neo4j.creatorid = Person0.id
##########
MATCH (c:Comment2)-[:REPLY_OF*]->(p:Post2)<-[:CONTAINER_OF]-(f:Forum2)-[:HAS_MEMBER]->(person:Person1)

RETURN person.id as personid, c.id as cid, f.id as fid
**********
select Comment0.creationDate, Person0.lastName, Person0.firstName, Comment0.content
from neo4j,Forum Forum0, Comment Comment0, Person Person0
where Forum0.title = $param and Person0.gender = $param and neo4j.fid = Forum0.id and neo4j.cid = Comment0.id and neo4j.personid = Person0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)<-[:IS_SUBCLASS_OF*]-(subTc:TagClass)

RETURN subTc.id as subTcid, tc.id as tcid, p.id as pid, t.id as tid
**********
select TagClass1.name, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Person Person0, TagClass TagClass0, TagClass TagClass1, Tag Tag0
where TagClass1.name = $param and TagClass0.name = $param and neo4j.pid = Person0.id and neo4j.tcid = TagClass0.id and neo4j.subTcid = TagClass1.id and neo4j.tid = Tag0.id
##########
MATCH (msg:Message2)-[:HAS_CREATOR]->(p:Person1)-[:WORK_AT]->(comp:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN msg.id as msgid, country.id as countryid, comp.id as compid
**********
select Message0.content, Message0.creationDate, Country0.name, Company0.name
from neo4j,Message Message0, Company Company0, Country Country0
where Company0.name = $param and Message0.locationIP = $param and neo4j.msgid = Message0.id and neo4j.compid = Company0.id and neo4j.countryid = Country0.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(m:Message1)-[:HAS_CREATOR]->(creator:Person)-[:STUDY_AT]->(uni:University)

RETURN uni.id as uniid, creator.id as creatorid, c.id as cid
**********
select University0.name, Person0.firstName, Comment0.creationDate, Comment0.content, Person0.lastName
from neo4j,University University0, Comment Comment0, Person Person0
where University0.name = $param and Comment0.browserUsed = $param and neo4j.uniid = University0.id and neo4j.cid = Comment0.id and neo4j.creatorid = Person0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(org:Organisation)

RETURN org.id as orgid, p.id as pid, city.id as cityid
**********
select Organisation0.name, Person0.email, Person0.lastName, Person0.firstName
from neo4j,City City0, Person Person0, Organisation Organisation0
where Organisation0.name = $param and City0.name = $param and neo4j.cityid = City0.id and neo4j.pid = Person0.id and neo4j.orgid = Organisation0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(m:Message1)-[:REPLY_OF]->(c:Comment1)-[:HAS_CREATOR]->(author:Person1)

RETURN author.id as authorid, c.id as cid, p.id as pid, m.id as mid
**********
select neo4j.mid, Comment0.content
from neo4j,Comment Comment0, Person Person0, Person Person1
where Person0.gender = $param and Person1.birthday > $param and neo4j.cid = Comment0.id and neo4j.pid = Person0.id and neo4j.authorid = Person1.id
##########
MATCH (t:Tag)<-[:HAS_TAG]-(p:Post2)<-[:CONTAINER_OF]-(f:Forum1)-[:HAS_MEMBER]->(person:Person1)

RETURN person.id as personid, p.id as pid, f.id as fid, t.id as tid
**********
select Forum0.title, neo4j.pid
from neo4j,Person Person0, Tag Tag0, Forum Forum0
where Tag0.name = $param and Person0.email CONTAINS $param and neo4j.personid = Person0.id and neo4j.tid = Tag0.id and neo4j.fid = Forum0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(person:Person1)

RETURN person.id as personid, org.id as orgid, city.id as cityid
**********
select Organisation0.name, City0.name, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Organisation Organisation0, City City0
where City0.name = $param and Person0.speaks CONTAINS $param and neo4j.personid = Person0.id and neo4j.orgid = Organisation0.id and neo4j.cityid = City0.id
##########
MATCH (p:Post2)-[:HAS_CREATOR]->(author:Person)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(m:Message2)

RETURN author.id as authorid, p.id as pid, tag.id as tagid, m.id as mid
**********
select neo4j.authorid, Message0.content
from neo4j,Post Post0, Tag Tag0, Message Message0
where Post0.creationDate < $param and Tag0.name = $param and neo4j.pid = Post0.id and neo4j.tagid = Tag0.id and neo4j.mid = Message0.id
##########
MATCH (forum:Forum1)-[:CONTAINER_OF]->(post:Post1)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, post.id as postid, forum.id as forumid
**********
select neo4j.postid, Post0.content, Person0.lastName, Person0.firstName
from neo4j,Post Post0, Forum Forum0, Person Person0
where Person0.gender = $param and Forum0.title = $param and neo4j.postid = Post0.id and neo4j.forumid = Forum0.id and neo4j.creatorid = Person0.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)<-[:IS_SUBCLASS_OF]-(subClass:TagClass)
RETURN tagClass.id as tagClassid, tag.id as tagid, subClass.id as subClassid, p.id as pid
**********
select Person0.firstName, Tag0.name, TagClass1.name, TagClass0.name, Person0.lastName
from neo4j,TagClass TagClass0, Person Person0, Tag Tag0, TagClass TagClass1
where TagClass1.name = $param and neo4j.subClassid = TagClass0.id and neo4j.pid = Person0.id and neo4j.tagid = Tag0.id and neo4j.tagClassid = TagClass1.id
##########
MATCH (p:Person1)-[:LIKES]->(msg:Message2)-[:REPLY_OF]->(orig:Post1)-[:HAS_CREATOR]->(creator:Person1)

RETURN orig.id as origid, creator.id as creatorid, msg.id as msgid, p.id as pid
**********
select Person1.firstName, Message0.content, Person0.firstName, Post0.content, Person0.lastName, Person1.lastName
from neo4j,Post Post0, Person Person0, Person Person1, Message Message0
where Person1.email = $param and neo4j.origid = Post0.id and neo4j.pid = Person0.id and neo4j.creatorid = Person1.id and neo4j.msgid = Message0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(uni:University)<-[:STUDY_AT]-(student:Person1)

RETURN uni.id as uniid, student.id as studentid, org.id as orgid, city.id as cityid
**********
select Person0.firstName, University0.name, Person0.lastName
from neo4j,Person Person0, University University0, Organisation Organisation0, City City0
where Organisation0.name = $param and City0.name = $param and neo4j.studentid = Person0.id and neo4j.uniid = University0.id and neo4j.orgid = Organisation0.id and neo4j.cityid = City0.id
##########
MATCH (f:Forum)-[:CONTAINER_OF]->(p:Post2)-[:HAS_CREATOR]->(creator:Person1)

RETURN creator.id as creatorid, p.id as pid, f.id as fid
**********
select Person0.firstName, Post0.content, Post0.creationDate, neo4j.pid, Person0.lastName
from neo4j,Forum Forum0, Post Post0, Person Person0
where Forum0.title = $param and Person0.gender = $param and neo4j.fid = Forum0.id and neo4j.pid = Post0.id and neo4j.creatorid = Person0.id
##########
MATCH (comment:Comment2)-[:REPLY_OF]->(post:Post1)-[:HAS_TAG]->(tag:Tag)

RETURN comment.id as commentid, post.id as postid, tag.id as tagid
**********
select neo4j.postid, neo4j.commentid, Comment0.content
from neo4j,Tag Tag0, Comment Comment0
where Comment0.creationDate > $param and Tag0.name = $param and neo4j.tagid = Tag0.id and neo4j.commentid = Comment0.id
##########
MATCH (company:Company)<-[:WORK_AT]-(p:Person)<-[:HAS_CREATOR]-(comment:Comment2)-[:REPLY_OF]->(m:Message2)

RETURN company.id as companyid, m.id as mid, comment.id as commentid, p.id as pid
**********
select neo4j.companyid, Company0.name, Person0.firstName, Comment0.content, neo4j.mid, Person0.lastName, neo4j.pid
from neo4j,Comment Comment0, Person Person0, Company Company0
where Company0.name = $param and Comment0.length > $param and neo4j.commentid = Comment0.id and neo4j.pid = Person0.id and neo4j.companyid = Company0.id
##########
MATCH (person:Person1)-[:LIKES]->(msg:Message1)-[:REPLY_OF]->(comment:Comment2)-[:HAS_CREATOR]->(creator:Person)

RETURN person.id as personid, creator.id as creatorid, comment.id as commentid, msg.id as msgid
**********
select Person0.lastName, neo4j.commentid, neo4j.msgid, Person0.firstName
from neo4j,Person Person0, Comment Comment0, Person Person1
where Person1.gender = $param and Comment0.creationDate < $param and neo4j.creatorid = Person0.id and neo4j.commentid = Comment0.id and neo4j.personid = Person1.id
##########
MATCH (u:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(o:Organisation)

RETURN o.id as oid, u.id as uid, city.id as cityid
**********
select City0.name, Organisation0.name, University0.name, neo4j.uid, neo4j.oid
from neo4j,University University0, City City0, Organisation Organisation0
where City0.name = $param and University0.name = $param and neo4j.uid = University0.id and neo4j.cityid = City0.id and neo4j.oid = Organisation0.id
##########
MATCH (p1:Person1)-[:KNOWS]->(p2:Person1)-[:LIKES]->(c:Comment2)-[:REPLY_OF]->(post:Post2)

RETURN p1.id as p1id, post.id as postid, p2.id as p2id, c.id as cid
**********
select Person1.firstName, Person1.lastName, Comment0.content, neo4j.p2id, neo4j.postid
from neo4j,Person Person0, Comment Comment0, Person Person1, Post Post0
where Post0.creationDate > datetime($param) and Person0.gender = $param and neo4j.p1id = Person0.id and neo4j.cid = Comment0.id and neo4j.p2id = Person1.id and neo4j.postid = Post0.id
##########
MATCH (person:Person1)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN company.id as companyid, person.id as personid, country.id as countryid
**********
select Person0.lastName, Company0.name, Person0.firstName
from neo4j,Company Company0, Country Country0, Person Person0
where Person0.birthday < $param and Country0.name = $param and neo4j.companyid = Company0.id and neo4j.countryid = Country0.id and neo4j.personid = Person0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN t.id as tid, tc.id as tcid, p.id as pid
**********
select Person0.firstName, Tag0.name, TagClass0.name, Person0.lastName, neo4j.pid
from neo4j,TagClass TagClass0, Tag Tag0, Person Person0
where TagClass0.name = $param and Person0.gender = $param and neo4j.tcid = TagClass0.id and neo4j.tid = Tag0.id and neo4j.pid = Person0.id
##########
MATCH (t:Tag)<-[:HAS_TAG]-(m:Message2)-[:HAS_CREATOR]->(p:Person)

RETURN t.id as tid, m.id as mid, p.id as pid
**********
select Person0.firstName, Tag0.name, Message0.content, Message0.length, Person0.lastName, neo4j.pid
from neo4j,Tag Tag0, Message Message0, Person Person0
where Tag0.name = $param and Message0.length < $param and neo4j.tid = Tag0.id and neo4j.mid = Message0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(pl:Place)
WHERE pl.id = $param
RETURN org.id as orgid, pl.id as plid, p.id as pid
**********
select Organisation0.name, Place0.name, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Organisation Organisation0, Place Place0
where Organisation0.name = $param and neo4j.pid = Person0.id and neo4j.orgid = Organisation0.id and neo4j.plid = Place0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person)-[:KNOWS]->(friend:Person)

RETURN friend.id as friendid, p.id as pid, f.id as fid
**********
select Person1.firstName, Person0.lastName, Person1.lastName, Person0.firstName
from neo4j,Person Person0, Forum Forum0, Person Person1
where Forum0.title = $param and Person1.speaks = $param and neo4j.pid = Person0.id and neo4j.fid = Forum0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(c:City)

RETURN u.id as uid, c.id as cid, p.id as pid
**********
select University0.name, Person0.lastName, City0.name, Person0.firstName
from neo4j,City City0, Person Person0, University University0
where Person0.birthday > $param and City0.name = $param and neo4j.cid = City0.id and neo4j.pid = Person0.id and neo4j.uid = University0.id
##########
MATCH (f:Forum)-[:CONTAINER_OF]->(po:Post1)-[:HAS_TAG]->(t:Tag)

RETURN po.id as poid, f.id as fid, t.id as tid
**********
select neo4j.poid, Tag0.name, neo4j.fid, Forum0.title, Post0.content
from neo4j,Tag Tag0, Post Post0, Forum Forum0
where Tag0.name = $param and Forum0.creationDate > $param and neo4j.tid = Tag0.id and neo4j.poid = Post0.id and neo4j.fid = Forum0.id
##########
MATCH (f:Forum2)-[:HAS_MEMBER]->(p:Person1)-[:STUDY_AT]->(u:University)

RETURN u.id as uid, p.id as pid, f.id as fid
**********
select Person0.firstName, University0.name, neo4j.fid, Forum0.title, Person0.lastName, neo4j.pid
from neo4j,University University0, Person Person0, Forum Forum0
where Forum0.title = $param and University0.name = $param and neo4j.uid = University0.id and neo4j.pid = Person0.id and neo4j.fid = Forum0.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(m:Message2)-[:HAS_CREATOR]->(p:Person)

RETURN m.id as mid, c.id as cid, p.id as pid
**********
select neo4j.cid, Comment0.creationDate, Comment0.content, Person0.firstName, neo4j.mid, Message0.content, Person0.lastName, neo4j.pid
from neo4j,Comment Comment0, Message Message0, Person Person0
where Person0.locationIP = $param and Comment0.length > $param and neo4j.cid = Comment0.id and neo4j.mid = Message0.id and neo4j.pid = Person0.id
##########
MATCH (comment:Comment1)-[:REPLY_OF]->(post:Post1)-[:HAS_CREATOR]->(creator:Person1)-[:WORK_AT]->(org:Organisation)

RETURN org.id as orgid, creator.id as creatorid, comment.id as commentid, post.id as postid
**********
select Organisation0.name, Person0.firstName, Comment0.content, Post0.content, Person0.lastName
from neo4j,Person Person0, Post Post0, Organisation Organisation0, Comment Comment0
where Comment0.creationDate > $param and Organisation0.name = $param and neo4j.creatorid = Person0.id and neo4j.postid = Post0.id and neo4j.orgid = Organisation0.id and neo4j.commentid = Comment0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(msg:Message2)-[:HAS_CREATOR]->(creator:Person)

RETURN t.id as tid, creator.id as creatorid, msg.id as msgid, p.id as pid
**********
select Person0.firstName, Message0.content, Person1.firstName, Tag0.name, Person1.lastName, Person0.lastName
from neo4j,Message Message0, Person Person0, Tag Tag0, Person Person1
where Person1.locationIP = $param and Message0.length < $param and neo4j.msgid = Message0.id and neo4j.creatorid = Person0.id and neo4j.tid = Tag0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person1)-[:IS_LOCATED_IN]->(pl:Place)-[:IS_PART_OF]->(co:Country)

RETURN pl.id as plid, p.id as pid, co.id as coid
**********
select Person0.firstName, Place0.name, Person0.lastName, neo4j.pid, Country0.name
from neo4j,Country Country0, Person Person0, Place Place0
where Place0.name = $param and Country0.name = $param and neo4j.coid = Country0.id and neo4j.pid = Person0.id and neo4j.plid = Place0.id
##########
MATCH (p:Person)-[:LIKES]->(m:Message2)-[:HAS_TAG]->(t:Tag)

RETURN t.id as tid, m.id as mid, p.id as pid
**********
select Person0.firstName, Tag0.name, neo4j.mid, Message0.content, Person0.lastName, neo4j.pid
from neo4j,Tag Tag0, Message Message0, Person Person0
where Tag0.name = $param and Message0.creationDate < $param and neo4j.tid = Tag0.id and neo4j.mid = Message0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person1)-[:LIKES]->(c:Comment2)-[:REPLY_OF]->(m:Message1)-[:HAS_CREATOR]->(creator:Person)

RETURN m.id as mid, creator.id as creatorid, c.id as cid, p.id as pid
**********
select Person1.firstName, Comment0.content, Person0.firstName, Message0.content, Person0.lastName, Person1.lastName
from neo4j,Comment Comment0, Person Person0, Person Person1, Message Message0
where Person0.browserUsed = $param and Message0.creationDate > $param and neo4j.cid = Comment0.id and neo4j.pid = Person0.id and neo4j.creatorid = Person1.id and neo4j.mid = Message0.id
##########
MATCH (c:City)<-[:IS_LOCATED_IN]-(org:Organisation)<-[:WORK_AT]-(p:Person)-[:HAS_INTEREST]->(t:Tag)

RETURN org.id as orgid, c.id as cid, p.id as pid, t.id as tid
**********
select Organisation0.name, Person0.lastName, City0.name, Person0.firstName
from neo4j,Person Person0, City City0, Tag Tag0, Organisation Organisation0
where Tag0.name = $param and Organisation0.name = $param and neo4j.pid = Person0.id and neo4j.cid = City0.id and neo4j.tid = Tag0.id and neo4j.orgid = Organisation0.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message1)<-[:CONTAINER_OF]-(f:Forum)-[:HAS_MODERATOR]->(mod:Person1)

RETURN mod.id as modid, m.id as mid, p.id as pid, f.id as fid, t.id as tid
**********
select Person0.lastName, Person1.firstName, Tag0.name, Person0.firstName, Forum0.title, Message0.content, Person1.lastName
from neo4j,Person Person0, Tag Tag0, Person Person1, Message Message0, Forum Forum0
where Forum0.title = $param and Person1.locationIP = $param and neo4j.modid = Person0.id and neo4j.tid = Tag0.id and neo4j.pid = Person1.id and neo4j.mid = Message0.id and neo4j.fid = Forum0.id
##########
MATCH (f:Forum1)-[:CONTAINER_OF]->(p:Post1)-[:HAS_CREATOR]->(person:Person)-[:STUDY_AT]->(u:University), (p)-[:HAS_TAG]->(t:Tag)

RETURN person.id as personid, u.id as uid, p.id as pid, f.id as fid, t.id as tid
**********
select Post0.content, University0.name, Person0.lastName, Tag0.name, Person0.firstName, Forum0.title
from neo4j,Post Post0, Person Person0, Tag Tag0, University University0, Forum Forum0
where Tag0.name = $param and Person0.gender = $param and neo4j.pid = Post0.id and neo4j.personid = Person0.id and neo4j.tid = Tag0.id and neo4j.uid = University0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)

RETURN u.id as uid, country.id as countryid, p.id as pid, city.id as cityid
**********
select City0.name, Person0.firstName, University0.name, Country0.name, Person0.lastName
from neo4j,Country Country0, Person Person0, City City0, University University0
where Country0.name = $param and Person0.speaks = $param and neo4j.countryid = Country0.id and neo4j.pid = Person0.id and neo4j.cityid = City0.id and neo4j.uid = University0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(city:City)

RETURN u.id as uid, p.id as pid, city.id as cityid
**********
select City0.name, University0.name, Person0.lastName, Person0.firstName
from neo4j,University University0, Person Person0, City City0
where Person0.birthday < $param and City0.name = $param and neo4j.uid = University0.id and neo4j.pid = Person0.id and neo4j.cityid = City0.id
##########
MATCH (person:Person1)-[:LIKES]->(post:Post2)-[:HAS_CREATOR]->(creator:Person)-[:WORK_AT]->(organisation:Organisation)-[:IS_LOCATED_IN]->(place:Place)

RETURN person.id as personid, creator.id as creatorid, place.id as placeid, post.id as postid, organisation.id as organisationid
**********
select Post0.content, Person0.lastName, Place0.name, Person0.firstName
from neo4j,Person Person0, Post Post0, Place Place0, Organisation Organisation0, Person Person1
where Person1.firstName = $param and Organisation0.name = $param and neo4j.creatorid = Person0.id and neo4j.postid = Post0.id and neo4j.placeid = Place0.id and neo4j.organisationid = Organisation0.id and neo4j.personid = Person1.id
##########
MATCH (university:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(person:Person1)-[:HAS_INTEREST]->(tag:Tag)

RETURN university.id as universityid, person.id as personid, tag.id as tagid, city.id as cityid
**********
select City0.name, Person0.lastName, University0.name, Person0.firstName
from neo4j,University University0, City City0, Person Person0, Tag Tag0
where Person0.birthday < $param and Tag0.name = $param and neo4j.universityid = University0.id and neo4j.cityid = City0.id and neo4j.personid = Person0.id and neo4j.tagid = Tag0.id
##########
MATCH (m:Message2)-[:REPLY_OF]->(p:Post1)-[:HAS_CREATOR]->(c:Person)-[:WORK_AT]->(o:Company)

RETURN o.id as oid, m.id as mid, p.id as pid, c.id as cid
**********
select Company0.name, neo4j.cid, Person0.firstName, Post0.content, neo4j.mid, Message0.content, neo4j.oid, Person0.lastName, neo4j.pid
from neo4j,Company Company0, Message Message0, Post Post0, Person Person0
where Company0.name = $param and Message0.creationDate > $param and neo4j.oid = Company0.id and neo4j.mid = Message0.id and neo4j.pid = Post0.id and neo4j.cid = Person0.id
##########
MATCH (c1:Comment1)-[:REPLY_OF]->(c2:Comment1)-[:HAS_CREATOR]->(p:Person1)-[:HAS_INTEREST]->(t:Tag)

RETURN t.id as tid, c2.id as c2id, c1.id as c1id, p.id as pid
**********
select neo4j.c2id, Comment0.content, Comment1.content, Person0.firstName, neo4j.tid, neo4j.c1id, Tag0.name, Person0.lastName, neo4j.pid
from neo4j,Comment Comment0, Tag Tag0, Person Person0, Comment Comment1
where Comment0.creationDate > $param and Tag0.name = $param and neo4j.c1id = Comment0.id and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.c2id = Comment1.id
##########
MATCH (tagClass:TagClass)<-[:HAS_TYPE]-(tag:Tag)<-[:HAS_TAG]-(message:Message1)<-[:REPLY_OF]-(comment:Comment2)-[:HAS_CREATOR]->(creator:Person)

RETURN message.id as messageid, tagClass.id as tagClassid, creator.id as creatorid, comment.id as commentid, tag.id as tagid
**********
select Person0.firstName, Comment0.content, Tag0.name, Message0.content, Person0.lastName
from neo4j,Person Person0, Message Message0, Tag Tag0, TagClass TagClass0, Comment Comment0
where Comment0.creationDate > $param and TagClass0.name = $param and neo4j.creatorid = Person0.id and neo4j.messageid = Message0.id and neo4j.tagid = Tag0.id and neo4j.tagClassid = TagClass0.id and neo4j.commentid = Comment0.id
##########
MATCH (p1:Person1)-[:KNOWS]->(p2:Person)-[:LIKES]->(post:Post1)-[:HAS_CREATOR]->(p3:Person)

RETURN p3.id as p3id, p1.id as p1id, post.id as postid, p2.id as p2id
**********
select Person2.firstName, Person0.lastName, Person1.lastName, Person1.firstName, Person2.lastName, neo4j.p3id, neo4j.p2id, neo4j.postid, Post0.content, Person0.firstName, neo4j.p1id
from neo4j,Person Person0, Person Person1, Post Post0, Person Person2
where Person1.birthday > $param and Person0.gender = $param and neo4j.p1id = Person0.id and neo4j.p3id = Person1.id and neo4j.postid = Post0.id and neo4j.p2id = Person2.id
##########
MATCH (person:Person1)-[:KNOWS]->(friend:Person)-[:STUDY_AT]->(university:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(organisation:Organisation)

RETURN university.id as universityid, friend.id as friendid, person.id as personid, city.id as cityid, organisation.id as organisationid
**********
select Organisation0.name, Person1.firstName, Person1.lastName, University0.name
from neo4j,Person Person0, University University0, City City0, Person Person1, Organisation Organisation0
where Person0.email = $param and City0.name = $param and neo4j.personid = Person0.id and neo4j.universityid = University0.id and neo4j.cityid = City0.id and neo4j.friendid = Person1.id and neo4j.organisationid = Organisation0.id
##########
MATCH (forum:Forum)-[:CONTAINER_OF]->(message:Message2)-[:HAS_TAG]->(tag:Tag)<-[:HAS_INTEREST]-(person:Person)

RETURN message.id as messageid, person.id as personid, forum.id as forumid, tag.id as tagid
**********
select Tag0.name, Message0.content, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Tag Tag0, Message Message0, Forum Forum0
where Message0.creationDate < $param and Forum0.title = $param and neo4j.personid = Person0.id and neo4j.tagid = Tag0.id and neo4j.messageid = Message0.id and neo4j.forumid = Forum0.id
##########
MATCH (c:City)<-[:IS_LOCATED_IN]-(org:Organisation)<-[:WORK_AT]-(p:Person1)-[:KNOWS]-(friend:Person)

RETURN friend.id as friendid, org.id as orgid, c.id as cid, p.id as pid
**********
select Organisation0.name, City0.name, Person0.lastName, Person1.firstName, Person0.firstName, Person1.lastName
from neo4j,City City0, Person Person0, Organisation Organisation0, Person Person1
where Person0.email CONTAINS $param and City0.name = $param and neo4j.cid = City0.id and neo4j.friendid = Person0.id and neo4j.orgid = Organisation0.id and neo4j.pid = Person1.id
##########
MATCH (f:Forum2)-[:CONTAINER_OF]->(post:Post2)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN post.id as postid, tc.id as tcid, f.id as fid, t.id as tid
**********
select Forum0.title, Post0.content, Tag0.name
from neo4j,TagClass TagClass0, Forum Forum0, Post Post0, Tag Tag0
where TagClass0.name = $param and Forum0.creationDate < $param and neo4j.tcid = TagClass0.id and neo4j.fid = Forum0.id and neo4j.postid = Post0.id and neo4j.tid = Tag0.id
##########
MATCH (person:Person)-[:HAS_CREATOR]-(msg:Message1)-[:REPLY_OF]->(comment:Comment2)-[:HAS_CREATOR]->(otherPerson:Person1)

RETURN otherPerson.id as otherPersonid, person.id as personid, comment.id as commentid, msg.id as msgid
**********
select Person0.firstName, Comment0.content, Person1.lastName, Person1.firstName, Person0.lastName
from neo4j,Message Message0, Person Person0, Comment Comment0, Person Person1
where Message0.creationDate > $param and Person1.gender = $param and neo4j.msgid = Message0.id and neo4j.otherPersonid = Person0.id and neo4j.commentid = Comment0.id and neo4j.personid = Person1.id
##########
MATCH (c:Comment1)-[:REPLY_OF]->(m:Message2)-[:HAS_CREATOR]->(p:Person1)

RETURN c.id as cid, p.id as pid, m.id as mid
**********
select Person0.firstName, Message0.content, Person0.lastName, Comment0.content
from neo4j,Comment Comment0, Person Person0, Message Message0
where Person0.speaks CONTAINS $param and Comment0.creationDate > $param and neo4j.cid = Comment0.id and neo4j.pid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)<-[:IS_SUBCLASS_OF]-(tc2:TagClass)

RETURN tc2.id as tc2id, tc.id as tcid, p.id as pid, t.id as tid
**********
select TagClass0.name, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Person Person0, TagClass TagClass0, TagClass TagClass1, Tag Tag0
where Person0.browserUsed = $param and TagClass1.name = $param and neo4j.pid = Person0.id and neo4j.tcid = TagClass0.id and neo4j.tc2id = TagClass1.id and neo4j.tid = Tag0.id
##########
MATCH (person:Person1)-[:LIKES]->(message:Message2)-[:HAS_CREATOR]->(creator:Person1)-[:IS_LOCATED_IN]->(city:City)

RETURN message.id as messageid, person.id as personid, creator.id as creatorid, city.id as cityid
**********
select Person1.firstName, Person0.lastName, Person0.firstName, Message0.content, Person1.lastName
from neo4j,Person Person0, City City0, Person Person1, Message Message0
where Person0.locationIP = $param and City0.name = $param and neo4j.personid = Person0.id and neo4j.cityid = City0.id and neo4j.creatorid = Person1.id and neo4j.messageid = Message0.id
##########
MATCH (msg:Message2)-[:HAS_TAG]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)<-[:IS_SUBCLASS_OF]-(superClass:TagClass)

RETURN tagClass.id as tagClassid, superClass.id as superClassid, msg.id as msgid, tag.id as tagid
**********
select Message0.content, Tag0.name, TagClass1.name
from neo4j,Tag Tag0, TagClass TagClass0, Message Message0, TagClass TagClass1
where TagClass0.name = $param and TagClass1.name = $param and neo4j.tagid = Tag0.id and neo4j.superClassid = TagClass0.id and neo4j.msgid = Message0.id and neo4j.tagClassid = TagClass1.id
##########
MATCH (p:Person1)-[:LIKES]->(m:Message1)-[:HAS_TAG]->(t:Tag)

RETURN m.id as mid, p.id as pid, t.id as tid
**********
select Message0.content, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Message Message0, Person Person0, Tag Tag0
where Person0.locationIP = $param and Tag0.name = $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)

RETURN u.id as uid, country.id as countryid, p.id as pid, city.id as cityid
**********
select City0.name, Person0.firstName, University0.name, Country0.name, neo4j.uid, neo4j.cityid, neo4j.countryid, Person0.lastName, neo4j.pid
from neo4j,Person Person0, City City0, Country Country0, University University0
where Country0.name = $param and University0.name = $param and neo4j.pid = Person0.id and neo4j.cityid = City0.id and neo4j.countryid = Country0.id and neo4j.uid = University0.id
##########
MATCH (f:Forum2)-[:CONTAINER_OF]->(p:Post2)-[:HAS_CREATOR]->(person:Person)

RETURN person.id as personid, p.id as pid, f.id as fid
**********
select Forum0.title, Person0.firstName, Person0.lastName, Post0.content
from neo4j,Forum Forum0, Person Person0, Post Post0
where Forum0.title = $param and Person0.birthday > $param and neo4j.fid = Forum0.id and neo4j.personid = Person0.id and neo4j.pid = Post0.id
##########
MATCH (c:Comment2)-[:REPLY_OF*]->(m:Message2)-[:HAS_TAG]->(t:Tag)

RETURN m.id as mid, c.id as cid, t.id as tid
**********
select Message0.content, Tag0.name, Comment0.content
from neo4j,Message Message0, Comment Comment0, Tag Tag0
where Tag0.name = $param and Comment0.creationDate > $param and neo4j.mid = Message0.id and neo4j.cid = Comment0.id and neo4j.tid = Tag0.id
##########
MATCH (f:Forum1)-[:HAS_MODERATOR]->(moderator:Person)-[:WORK_AT]->(comp:Company)
WHERE moderator.creationDate < $param
RETURN moderator.id as moderatorid, f.id as fid, comp.id as compid
**********
select Forum0.title, Person0.firstName, Company0.name
from neo4j,Company Company0, Person Person0, Forum Forum0
where Forum0.title = $param and neo4j.compid = Company0.id and neo4j.moderatorid = Person0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(msg:Message2)<-[:CONTAINER_OF]-(f:Forum1)

RETURN msg.id as msgid, p.id as pid, f.id as fid
**********
select Message0.content, Forum0.title, Person0.lastName, Person0.firstName
from neo4j,Forum Forum0, Person Person0, Message Message0
where Forum0.title = $param and Person0.gender = $param and neo4j.fid = Forum0.id and neo4j.pid = Person0.id and neo4j.msgid = Message0.id
##########
MATCH (comment:Comment1)-[:REPLY_OF]->(msg:Message2)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_PART_OF]-(country:Country)

RETURN place.id as placeid, comment.id as commentid, msg.id as msgid, country.id as countryid
**********
select Message0.content, Comment0.content, neo4j.commentid, Country0.name, Place0.name, neo4j.countryid, neo4j.msgid, neo4j.placeid
from neo4j,Message Message0, Place Place0, Country Country0, Comment Comment0
where Country0.name = $param and Place0.name = $param and neo4j.msgid = Message0.id and neo4j.placeid = Place0.id and neo4j.countryid = Country0.id and neo4j.commentid = Comment0.id
##########
MATCH (m:Message2)-[:IS_LOCATED_IN]->(place:Place)-[:IS_PART_OF]->(country:Country)

RETURN place.id as placeid, country.id as countryid, m.id as mid
**********
select Country0.name, Message0.content, Place0.name, Message0.creationDate
from neo4j,Country Country0, Message Message0, Place Place0
where Country0.name = $param and Message0.browserUsed = $param and neo4j.countryid = Country0.id and neo4j.mid = Message0.id and neo4j.placeid = Place0.id
##########
MATCH (m:Message1)-[:HAS_CREATOR]->(p:Person)-[:WORK_AT]->(c:Company)

RETURN c.id as cid, p.id as pid, m.id as mid
**********
select Message0.content, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Message Message0, Person Person0, Company Company0
where Company0.name = $param and Message0.length > $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.cid = Company0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN c.id as cid, country.id as countryid, p.id as pid
**********
select Country0.name, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Person Person0, Company Company0, Country Country0
where Person0.email CONTAINS $param and Country0.name = $param and neo4j.pid = Person0.id and neo4j.cid = Company0.id and neo4j.countryid = Country0.id
##########
MATCH (p:Person1)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(city:City)

RETURN u.id as uid, p.id as pid, city.id as cityid
**********
select City0.name, University0.name, Person0.lastName, Person0.firstName
from neo4j,University University0, Person Person0, City City0
where Person0.birthday > $param and City0.name = $param and neo4j.uid = University0.id and neo4j.pid = Person0.id and neo4j.cityid = City0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(p:Person1)

RETURN org.id as orgid, p.id as pid, city.id as cityid
**********
select Organisation0.name, City0.name, Person0.lastName, Person0.firstName
from neo4j,City City0, Organisation Organisation0, Person Person0
where Organisation0.name = $param and City0.name = $param and neo4j.cityid = City0.id and neo4j.orgid = Organisation0.id and neo4j.pid = Person0.id
##########
MATCH (person:Person1)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN company.id as companyid, person.id as personid, country.id as countryid
**********
select Person0.lastName, neo4j.personid, Company0.name, Person0.firstName
from neo4j,Company Company0, Person Person0, Country Country0
where Person0.birthday < $param and Country0.name = $param and neo4j.companyid = Company0.id and neo4j.personid = Person0.id and neo4j.countryid = Country0.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(city:City)-[:IS_PART_OF]->(country:Country)

RETURN org.id as orgid, country.id as countryid, city.id as cityid
**********
select Organisation0.name, City0.name, Country0.name
from neo4j,Country Country0, City City0, Organisation Organisation0
where Country0.name = $param and Organisation0.name = $param and neo4j.countryid = Country0.id and neo4j.cityid = City0.id and neo4j.orgid = Organisation0.id
##########
MATCH (msg:Message1)-[:REPLY_OF*1..3]->(post:Post2)-[:HAS_CREATOR]->(author:Person)-[:IS_LOCATED_IN]->(place:Place)

RETURN author.id as authorid, place.id as placeid, post.id as postid, msg.id as msgid
**********
select Message0.content, Person0.firstName, Person0.lastName, neo4j.postid, neo4j.msgid
from neo4j,Person Person0, Place Place0, Message Message0
where Message0.length > $param and Place0.name = $param and neo4j.authorid = Person0.id and neo4j.placeid = Place0.id and neo4j.msgid = Message0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(o:Organisation)-[:IS_LOCATED_IN]->(c:City)

RETURN o.id as oid, c.id as cid, p.id as pid
**********
select Organisation0.name, City0.name, Person0.firstName, Person0.lastName, neo4j.pid
from neo4j,Person Person0, City City0, Organisation Organisation0
where Person0.firstName = $param and City0.name = $param and neo4j.pid = Person0.id and neo4j.cid = City0.id and neo4j.oid = Organisation0.id
##########
MATCH (f:Forum)-[:CONTAINER_OF]->(post:Post1)-[:HAS_TAG]->(t:Tag)

RETURN post.id as postid, f.id as fid, t.id as tid
**********
select neo4j.postid, Tag0.name, neo4j.fid, Forum0.title, Post0.content
from neo4j,Post Post0, Forum Forum0, Tag Tag0
where Tag0.name = $param and Forum0.creationDate > $param and neo4j.postid = Post0.id and neo4j.fid = Forum0.id and neo4j.tid = Tag0.id
##########
MATCH (f:Forum)-[:CONTAINER_OF]->(m:Message2)-[:HAS_CREATOR]->(p:Person1)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, p.id as pid, f.id as fid, m.id as mid
**********
select Forum0.title, Message0.content, Place0.name, Person0.firstName
from neo4j,Message Message0, Place Place0, Forum Forum0, Person Person0
where Forum0.title = $param and Message0.length > $param and neo4j.mid = Message0.id and neo4j.placeid = Place0.id and neo4j.fid = Forum0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person)-[:HAS_CREATOR]-(m:Message2)-[:IS_LOCATED_IN]->(country:Country)

RETURN m.id as mid, country.id as countryid, p.id as pid
**********
select Person0.firstName, Country0.name, neo4j.mid, Message0.content, neo4j.pid
from neo4j,Country Country0, Message Message0, Person Person0
where Country0.name = $param and Person0.browserUsed = $param and neo4j.countryid = Country0.id and neo4j.mid = Message0.id and neo4j.pid = Person0.id
##########
MATCH (company:Company)<-[:WORK_AT]-(p:Person1)-[:HAS_INTEREST]->(t:Tag)

RETURN t.id as tid, company.id as companyid, p.id as pid
**********
select neo4j.companyid, Company0.name, Person0.firstName, Tag0.name, neo4j.pid
from neo4j,Tag Tag0, Person Person0, Company Company0
where Tag0.name = $param and Company0.name = $param and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.companyid = Company0.id
##########
MATCH (u:University)<-[:STUDY_AT]-(p:Person)-[:IS_LOCATED_IN]->(c:City)

RETURN u.id as uid, c.id as cid, p.id as pid
**********
select City0.name, Person0.firstName, University0.name, neo4j.uid, neo4j.pid
from neo4j,University University0, Person Person0, City City0
where City0.name = $param and University0.name = $param and neo4j.uid = University0.id and neo4j.pid = Person0.id and neo4j.cid = City0.id
##########
MATCH (p1:Person)-[:KNOWS]->(p2:Person)-[:LIKES]->(msg:Message1)<-[:REPLY_OF]-(comment:Comment1)

RETURN comment.id as commentid, p1.id as p1id, p2.id as p2id, msg.id as msgid
**********
select Message0.content, Person0.firstName, Person0.lastName, Comment0.content
from neo4j,Message Message0, Person Person0, Comment Comment0, Person Person1
where Person1.email = $param and Comment0.creationDate < $param and neo4j.msgid = Message0.id and neo4j.p2id = Person0.id and neo4j.commentid = Comment0.id and neo4j.p1id = Person1.id
##########
MATCH (p:Person)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(c:City)<-[:IS_LOCATED_IN]-(o:Organisation)

RETURN o.id as oid, u.id as uid, c.id as cid, p.id as pid
**********
select Organisation0.name, City0.name, Person0.firstName, University0.name, Person0.lastName
from neo4j,Organisation Organisation0, City City0, Person Person0, University University0
where Person0.birthday > $param and City0.name = $param and neo4j.oid = Organisation0.id and neo4j.cid = City0.id and neo4j.pid = Person0.id and neo4j.uid = University0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person2)-[:HAS_INTEREST]->(tag:Tag)

RETURN p.id as pid, tag.id as tagid, f.id as fid
**********
select Forum0.title, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Tag Tag0, Forum Forum0
where Forum0.title = $param and Tag0.name = $param and neo4j.pid = Person0.id and neo4j.tagid = Tag0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(msg:Message3)-[:IS_LOCATED_IN]->(place:Place)

RETURN place.id as placeid, msg.id as msgid, p.id as pid, tag.id as tagid
**********
select Message0.content, Tag0.name, Place0.name, Person0.firstName
from neo4j,Person Person0, Place Place0, Message Message0, Tag Tag0
where Place0.name = $param and Message0.locationIP = $param and neo4j.pid = Person0.id and neo4j.placeid = Place0.id and neo4j.msgid = Message0.id and neo4j.tagid = Tag0.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)

RETURN t.id as tid, p.id as pid, m.id as mid
**********
select Message0.content, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Message Message0, Person Person0, Tag Tag0
where Person0.locationIP = $param and Message0.length < $param and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)-[:HAS_CREATOR]->(creator:Person2)

RETURN t.id as tid, creator.id as creatorid, p.id as pid, m.id as mid
**********
select Message0.content, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Person Person0, Message Message0, Tag Tag0, Person Person1
where Person1.gender = $param and Message0.length > $param and neo4j.pid = Person0.id and neo4j.mid = Message0.id and neo4j.tid = Tag0.id and neo4j.creatorid = Person1.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person2)-[:HAS_INTEREST]->(t:Tag)

RETURN friend.id as friendid, p.id as pid, t.id as tid
**********
select Person0.lastName, Person1.firstName, Person0.firstName, Tag0.name, Person1.lastName
from neo4j,Person Person0, Tag Tag0, Person Person1
where Tag0.name = $param and Person1.browserUsed = $param and neo4j.friendid = Person0.id and neo4j.tid = Tag0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person1)-[:HAS_INTEREST]->(t:Tag)

RETURN friend.id as friendid, p.id as pid, t.id as tid
**********
select Person0.lastName, Person1.firstName, Person0.firstName, Tag0.name, Person1.lastName
from neo4j,Person Person0, Person Person1, Tag Tag0
where Tag0.name = $param and Person1.gender = $param and neo4j.friendid = Person0.id and neo4j.pid = Person1.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(post:Post3)-[:HAS_CREATOR]->(creator:Person3)
WHERE p.id = $param
RETURN creator.id as creatorid, post.id as postid, p.id as pid
**********
select neo4j.creatorid, Person0.firstName, Person1.firstName, neo4j.postid, Post0.content, neo4j.pid
from neo4j,Person Person0, Post Post0, Person Person1
where Post0.creationDate > $param and neo4j.creatorid = Person0.id and neo4j.postid = Post0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person3)-[:KNOWS*1..3]-(friend:Person3)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)

RETURN m.id as mid, p.id as pid, t.id as tid
**********
select Message0.content, Person0.lastName, Message0.creationDate, Person0.firstName
from neo4j,Message Message0, Tag Tag0, Person Person0
where Tag0.name = $param and Person0.gender = $param and neo4j.mid = Message0.id and neo4j.tid = Tag0.id and neo4j.pid = Person0.id
##########
MATCH (forum:Forum1)-[:HAS_MEMBER]->(member:Person1)-[:WORK_AT]->(company:Company)

RETURN member.id as memberid, forum.id as forumid, company.id as companyid
**********
select Forum0.title, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Person Person0, Company Company0, Forum Forum0
where Person0.locationIP = $param and Forum0.title = $param and Company0.name = $param and neo4j.memberid = Person0.id and neo4j.companyid = Company0.id and neo4j.forumid = Forum0.id
##########
MATCH (p:Person3)-[:KNOWS*2..3]-(friend:Person3)-[:LIKES]->(m:Message3)

RETURN friend.id as friendid, m.id as mid, p.id as pid
**********
select Person1.firstName, Person0.firstName, neo4j.friendid, Message0.content, neo4j.mid, neo4j.pid
from neo4j,Person Person0, Message Message0, Person Person1
where Person1.birthday < $param and Message0.locationIP = $param and neo4j.friendid = Person0.id and neo4j.mid = Message0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person1)-[:HAS_INTEREST]->(tag:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN friend.id as friendid, tc.id as tcid, p.id as pid, tag.id as tagid
**********
select Tag0.name, Person1.firstName, Person1.lastName
from neo4j,Person Person0, TagClass TagClass0, Tag Tag0, Person Person1
where TagClass0.name = $param and Person0.speaks = $param and neo4j.pid = Person0.id and neo4j.tcid = TagClass0.id and neo4j.tagid = Tag0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person1)-[:WORK_AT]->(comp:Company)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(msg:Message3)

RETURN comp.id as compid, place.id as placeid, msg.id as msgid, p.id as pid
**********
select Message0.content, Person0.firstName, Place0.name, Person0.lastName, Company0.name, neo4j.pid
from neo4j,Message Message0, Place Place0, Company Company0, Person Person0
where Person0.firstName = $param and Message0.creationDate > date($param) and neo4j.msgid = Message0.id and neo4j.placeid = Place0.id and neo4j.compid = Company0.id and neo4j.pid = Person0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)

RETURN t.id as tid, p.id as pid, f.id as fid, m.id as mid
**********
select Person0.firstName, Tag0.name, Forum0.title, Message0.content, Person0.lastName
from neo4j,Forum Forum0, Person Person0, Tag Tag0, Message Message0
where Forum0.title = $param and Message0.length > $param and neo4j.fid = Forum0.id and neo4j.pid = Person0.id and neo4j.tid = Tag0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(f:Forum1)-[:HAS_MODERATOR]->(mod:Person2)

RETURN mod.id as modid, p.id as pid, f.id as fid, t.id as tid
**********
select Person0.lastName, Person1.firstName, Person0.firstName, Forum0.title, Person1.lastName
from neo4j,Person Person0, Person Person1, Tag Tag0, Forum Forum0
where Tag0.name = $param and Person0.gender = $param and neo4j.modid = Person0.id and neo4j.pid = Person1.id and neo4j.tid = Tag0.id and neo4j.fid = Forum0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person1)-[:KNOWS]->(friend:Person1)

RETURN friend.id as friendid, p.id as pid, f.id as fid
**********
select Person0.lastName, Person1.firstName, Person0.firstName, Forum0.title, Person1.lastName
from neo4j,Forum Forum0, Person Person0, Person Person1
where Forum0.title = $param and Person0.birthday > $param and neo4j.fid = Forum0.id and neo4j.friendid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person2)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(country:Country)<-[:IS_LOCATED_IN]-(msg:Message3)

RETURN msg.id as msgid, country.id as countryid, c.id as cid, p.id as pid
**********
select Message0.content, Country0.name, Person0.lastName, Person0.firstName
from neo4j,Country Country0, Person Person0, Message Message0, Company Company0
where Message0.browserUsed = $param and Company0.name = $param and neo4j.countryid = Country0.id and neo4j.pid = Person0.id and neo4j.msgid = Message0.id and neo4j.cid = Company0.id
##########
MATCH (p:Person2)-[:KNOWS]->(p2:Person1)-[:HAS_INTEREST]->(t:Tag)

RETURN p2.id as p2id, p.id as pid, t.id as tid
**********
select Person0.firstName, Person0.lastName, Person1.firstName, Tag0.name, Person1.lastName
from neo4j,Tag Tag0, Person Person0, Person Person1
where Tag0.name = $param and Person0.birthday > $param and neo4j.tid = Tag0.id and neo4j.p2id = Person0.id and neo4j.pid = Person1.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person1)-[:KNOWS]->(p2:Person2)
WHERE p.creationDate > date($param)
RETURN p2.id as p2id, p.id as pid, f.id as fid
**********
select Forum0.title, Person1.firstName, Person0.firstName
from neo4j,Forum Forum0, Person Person0, Person Person1
where Forum0.title = $param and neo4j.fid = Forum0.id and neo4j.pid = Person0.id and neo4j.p2id = Person1.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(member:Person3)-[:LIKES]->(likedMessage:Message3)-[:HAS_TAG]->(tag:Tag)

RETURN member.id as memberid, likedMessage.id as likedMessageid, tag.id as tagid, f.id as fid
**********
select Message0.content, Forum0.title, Person0.firstName
from neo4j,Person Person0, Forum Forum0, Tag Tag0, Message Message0
where Forum0.creationDate > $param and Tag0.name = $param and neo4j.memberid = Person0.id and neo4j.fid = Forum0.id and neo4j.tagid = Tag0.id and neo4j.likedMessageid = Message0.id
##########
MATCH (p1:Person2)-[:KNOWS]->(p2:Person1)-[:KNOWS]->(p3:Person2)

RETURN p3.id as p3id, p1.id as p1id, p2.id as p2id
**********
select Person2.firstName, Person1.firstName, Person0.firstName
from neo4j,Person Person0, Person Person1, Person Person2
where Person2.gender = $param and Person0.birthday < $param and neo4j.p1id = Person0.id and neo4j.p2id = Person1.id and neo4j.p3id = Person2.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(post:Post3)

RETURN friend.id as friendid, post.id as postid, p.id as pid, t.id as tid
**********
select Post0.content, Person1.lastName, Person0.firstName, Person1.firstName, Tag0.name, Person0.lastName
from neo4j,Person Person0, Person Person1, Tag Tag0, Post Post0
where Post0.creationDate > $param and Person0.email = $param and neo4j.pid = Person0.id and neo4j.friendid = Person1.id and neo4j.tid = Tag0.id and neo4j.postid = Post0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(country:Country)<-[:IS_LOCATED_IN]-(msg:Message3)

RETURN c.id as cid, msg.id as msgid, country.id as countryid, p.id as pid
**********
select Message0.content, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Person Person0, Message Message0, Country Country0, Company Company0
where Country0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.msgid = Message0.id and neo4j.countryid = Country0.id and neo4j.cid = Company0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(msg:Message3)

RETURN friend.id as friendid, msg.id as msgid, p.id as pid
**********
select Message0.content, Message0.creationDate, Person1.firstName, Person1.lastName
from neo4j,Person Person0, Message Message0, Person Person1
where Person0.gender = $param and Person1.birthday > date($param) and neo4j.pid = Person0.id and neo4j.msgid = Message0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person1)-[:LIKES]->(msg:Message3)-[:IS_LOCATED_IN]->(pl:Place)
WHERE p.id = $param
RETURN friend.id as friendid, pl.id as plid, msg.id as msgid
**********
select Message0.content, Person0.firstName, Place0.name, Person0.lastName
from neo4j,Place Place0, Message Message0, Person Person0
where Place0.name = $param and neo4j.plid = Place0.id and neo4j.msgid = Message0.id and neo4j.friendid = Person0.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person2)-[:HAS_INTEREST]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)
RETURN tagClass.id as tagClassid, friend.id as friendid, tag.id as tagid, p.id as pid
**********
select Person0.lastName, Person1.firstName, Tag0.name, Person0.firstName, TagClass0.name, Person1.lastName
from neo4j,Person Person0, TagClass TagClass0, Tag Tag0, Person Person1
where TagClass0.name = $param and neo4j.friendid = Person0.id and neo4j.tagClassid = TagClass0.id and neo4j.tagid = Tag0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)-[:HAS_CREATOR]->(creator:Person3)
WHERE p.id = $param
RETURN creator.id as creatorid, m.id as mid
**********
select neo4j.mid, Message0.content, Message0.creationDate
from neo4j,Person Person0, Message Message0
where Person0.gender = $param and neo4j.creatorid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person3)-[:KNOWS*2..4]-(friend:Person3)-[:WORK_AT]->(o:Organisation)-[:IS_LOCATED_IN]->(country:Country)

RETURN friend.id as friendid, o.id as oid, country.id as countryid, p.id as pid
**********
select Organisation0.name, Person1.lastName, Person0.firstName, Person1.firstName, Country0.name, neo4j.countryid, neo4j.friendid, Person0.lastName, neo4j.pid
from neo4j,Organisation Organisation0, Country Country0, Person Person0, Person Person1
where Person0.speaks CONTAINS $param and Country0.name = $param and neo4j.oid = Organisation0.id and neo4j.countryid = Country0.id and neo4j.pid = Person0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person2)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(msg:Message3)

RETURN org.id as orgid, place.id as placeid, msg.id as msgid, p.id as pid
**********
select Organisation0.name, Message0.content, Person0.firstName, Place0.name, neo4j.msgid, neo4j.pid
from neo4j,Organisation Organisation0, Message Message0, Person Person0, Place Place0
where Person0.gender = $param and Place0.name = $param and neo4j.orgid = Organisation0.id and neo4j.msgid = Message0.id and neo4j.pid = Person0.id and neo4j.placeid = Place0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(member:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(post:Post3)

RETURN post.id as postid, f.id as fid
**********
select Post0.creationDate, neo4j.postid, Post0.content
from neo4j,Post Post0, Forum Forum0
where Forum0.title = $param and Post0.creationDate < $param and neo4j.postid = Post0.id and neo4j.fid = Forum0.id
##########
MATCH (f:Forum2)-[:HAS_MEMBER]->(p:Person1)-[:KNOWS]-(friend:Person1)

RETURN friend.id as friendid, p.id as pid, f.id as fid
**********
select neo4j.fid, Person1.lastName, Person1.firstName
from neo4j,Forum Forum0, Person Person0, Person Person1
where Forum0.title = $param and Person0.locationIP = $param and neo4j.fid = Forum0.id and neo4j.friendid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (p1:Person2)-[:KNOWS]->(p2:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)<-[:REPLY_OF]-(c:Comment3)

RETURN m.id as mid, p1.id as p1id, p2.id as p2id, c.id as cid, t.id as tid
**********
select Person0.firstName, Comment0.content, Tag0.name, Message0.content, Person1.firstName
from neo4j,Tag Tag0, Message Message0, Comment Comment0, Person Person0, Person Person1
where Tag0.name = $param and Person1.birthday < $param and neo4j.tid = Tag0.id and neo4j.mid = Message0.id and neo4j.cid = Comment0.id and neo4j.p2id = Person0.id and neo4j.p1id = Person1.id
##########
MATCH (m:Message3)-[:HAS_TAG]->(t:Tag)<-[:HAS_TAG]-(f:Forum1)-[:HAS_MODERATOR]->(mod:Person2)

RETURN mod.id as modid, m.id as mid, t.id as tid
**********
select neo4j.mid, Message0.content, Person0.lastName, Person0.firstName
from neo4j,Tag Tag0, Person Person0, Message Message0
where Tag0.name = $param and Person0.email = $param and neo4j.tid = Tag0.id and neo4j.modid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(f:Forum2)-[:CONTAINER_OF]->(m:Message3)

RETURN t.id as tid, p.id as pid, f.id as fid, m.id as mid
**********
select Message0.length, Person0.firstName, Tag0.name, Forum0.title, Message0.content, Person0.lastName
from neo4j,Message Message0, Forum Forum0, Person Person0, Tag Tag0
where Person0.email = $param and Message0.length > $param and neo4j.mid = Message0.id and neo4j.fid = Forum0.id and neo4j.pid = Person0.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person3)-[:KNOWS*2..4]-(friend:Person3)

RETURN friend.id as friendid, p.id as pid
**********
select neo4j.friendid, Person1.firstName, Person1.lastName
from neo4j,Person Person0, Person Person1
where Person1.birthday > $param and Person0.firstName = $param and neo4j.pid = Person0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(f:Forum2)

RETURN friend.id as friendid, p.id as pid, f.id as fid, t.id as tid
**********
select Forum0.title, Person0.firstName, Person0.lastName, Tag0.name
from neo4j,Tag Tag0, Person Person0, Forum Forum0, Person Person1
where Forum0.title = $param and Person1.gender = $param and neo4j.tid = Tag0.id and neo4j.friendid = Person0.id and neo4j.fid = Forum0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)-[:HAS_CREATOR]->(creator:Person1)

RETURN m.id as mid, creator.id as creatorid, p.id as pid
**********
select Person1.firstName, Person0.firstName, Message0.content, Person0.lastName, Person1.lastName
from neo4j,Person Person0, Person Person1, Message Message0
where Person0.email = $param and Person1.birthday > $param and neo4j.pid = Person0.id and neo4j.creatorid = Person1.id and neo4j.mid = Message0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(org:Organisation)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(m:Message3)

RETURN org.id as orgid, place.id as placeid, p.id as pid, m.id as mid
**********
select Organisation0.name, Person0.firstName, Place0.name, Message0.content, Person0.lastName
from neo4j,Person Person0, Message Message0, Organisation Organisation0, Place Place0
where Organisation0.name = $param and Place0.name = $param and neo4j.pid = Person0.id and neo4j.mid = Message0.id and neo4j.orgid = Organisation0.id and neo4j.placeid = Place0.id
##########
MATCH (p:Person2)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(country:Country)<-[:IS_LOCATED_IN]-(m:Message3)

RETURN c.id as cid, country.id as countryid, p.id as pid, m.id as mid
**********
select Message0.content, Person0.lastName, Company0.name, Person0.firstName
from neo4j,Country Country0, Company Company0, Person Person0, Message Message0
where Country0.name = $param and Person0.speaks = $param and neo4j.countryid = Country0.id and neo4j.cid = Company0.id and neo4j.pid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person3)-[:KNOWS*2..3]-(friend:Person3)-[:WORK_AT]->(org:Organisation)

RETURN friend.id as friendid, org.id as orgid, p.id as pid
**********
select neo4j.friendid, Person1.firstName, Person1.lastName
from neo4j,Organisation Organisation0, Person Person0, Person Person1
where Person0.firstName = $param and Organisation0.name = $param and neo4j.orgid = Organisation0.id and neo4j.pid = Person0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person3)-[:KNOWS*2]-(friendOfFriend:Person3)-[:HAS_INTEREST]->(tag:Tag)

RETURN friendOfFriend.id as friendOfFriendid, p.id as pid, tag.id as tagid
**********
select Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Person Person0, Person Person1, Tag Tag0
where Person1.email = $param and Tag0.name = $param and neo4j.friendOfFriendid = Person0.id and neo4j.pid = Person1.id and neo4j.tagid = Tag0.id
MATCH (p:Person2)-[:HAS_INTEREST]->(tag:Tag)-[:HAS_TYPE]->(tagClass:TagClass)<-[:IS_SUBCLASS_OF]-(subTagClass:TagClass)

RETURN subTagClass.id as subTagClassid, p.id as pid, tag.id as tagid
**********
select Person0.firstName, Tag0.name, TagClass0.name, neo4j.pid
from neo4j,Person Person0, Tag Tag0, TagClass TagClass0
where Person0.birthday > $param and neo4j.pid = Person0.id and neo4j.tagid = Tag0.id and neo4j.subTagClassid = TagClass0.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)-[:HAS_CREATOR]->(p2:Person1)

RETURN t.id as tid, m.id as mid, p2.id as p2id, p.id as pid
**********
select Person0.firstName, Person0.lastName, Person1.firstName, neo4j.p2id, Message0.content, Person1.lastName, neo4j.pid
from neo4j,Person Person0, Message Message0, Tag Tag0, Person Person1
where Tag0.name = $param and Person0.birthday > date($param) and neo4j.p2id = Person0.id and neo4j.mid = Message0.id and neo4j.tid = Tag0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person2)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN friend.id as friendid, tc.id as tcid, p.id as pid
**********
select TagClass0.name, Person1.lastName, Person1.firstName
from neo4j,Person Person0, TagClass TagClass0, Person Person1
where Person0.firstName = $param and neo4j.friendid = Person0.id and neo4j.tcid = TagClass0.id and neo4j.pid = Person1.id
##########
MATCH (org:Organisation)-[:IS_LOCATED_IN]->(place:Place)<-[:IS_LOCATED_IN]-(msg:Message3)

RETURN org.id as orgid, place.id as placeid, msg.id as msgid
**********
select Message0.content, Place0.name, Message0.length
from neo4j,Message Message0, Organisation Organisation0, Place Place0
where Message0.creationDate < $param and Organisation0.name = $param and neo4j.msgid = Message0.id and neo4j.orgid = Organisation0.id and neo4j.placeid = Place0.id
##########
MATCH (p:Person2)-[:KNOWS]-(friend:Person1)-[:HAS_INTEREST]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)

RETURN friend.id as friendid, t.id as tid, tc.id as tcid, p.id as pid
**********
select Person0.firstName, Person1.firstName, Tag0.name, TagClass0.name, neo4j.friendid, neo4j.pid
from neo4j,Tag Tag0, Person Person0, TagClass TagClass0, Person Person1
where Person0.email = $param and TagClass0.name = $param and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.tcid = TagClass0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(f:Forum1)-[:HAS_MEMBER]->(p2:Person1)

RETURN t.id as tid, p2.id as p2id, p.id as pid, f.id as fid
**********
select Person1.firstName, Person0.firstName, Tag0.name, neo4j.p2id, neo4j.pid
from neo4j,Person Person0, Tag Tag0, Forum Forum0, Person Person1
where Person0.gender = $param and Forum0.title CONTAINS $param and neo4j.pid = Person0.id and neo4j.tid = Tag0.id and neo4j.fid = Forum0.id and neo4j.p2id = Person1.id
##########
MATCH (p:Post3)-[:HAS_TAG]->(t:Tag)<-[:HAS_INTEREST]-(person:Person2)-[:STUDY_AT]->(u:University)-[:IS_LOCATED_IN]->(city:City)

RETURN person.id as personid, u.id as uid, p.id as pid, city.id as cityid, t.id as tid
**********
select University0.name, Person0.firstName, Person0.lastName, Post0.content
from neo4j,University University0, Post Post0, City City0, Tag Tag0, Person Person0
where Tag0.name = $param and City0.name = $param and neo4j.uid = University0.id and neo4j.pid = Post0.id and neo4j.cityid = City0.id and neo4j.tid = Tag0.id and neo4j.personid = Person0.id
##########
MATCH (p:Person1)-[:WORK_AT]->(c:Company)-[:IS_LOCATED_IN]->(country:Country)<-[:IS_PART_OF]-(city:City)

RETURN country.id as countryid, c.id as cid, p.id as pid, city.id as cityid
**********
select Person0.firstName, City0.name, Country0.name, neo4j.pid
from neo4j,Person Person0, City City0, Country Country0, Company Company0
where Company0.name = $param and City0.name = $param and neo4j.pid = Person0.id and neo4j.cityid = City0.id and neo4j.countryid = Country0.id and neo4j.cid = Company0.id
##########
MATCH (p:Person1)-[:KNOWS]->(:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)

RETURN m.id as mid, p.id as pid, t.id as tid
**********
select Message0.content, Person0.lastName, Message0.creationDate, Person0.firstName
from neo4j,Tag Tag0, Person Person0, Message Message0
where Tag0.name = $param and Message0.creationDate > $param and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(f:Forum1)

RETURN p.id as pid, f.id as fid, t.id as tid
**********
select Forum0.title, Tag0.name, Person0.firstName
from neo4j,Forum Forum0, Person Person0, Tag Tag0
where Person0.lastName = $param and Forum0.creationDate < $param and neo4j.fid = Forum0.id and neo4j.pid = Person0.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)

RETURN m.id as mid, p.id as pid, t.id as tid
**********
select Message0.content, Person0.lastName, Message0.creationDate, Person0.firstName
from neo4j,Tag Tag0, Message Message0, Person Person0
where Person0.locationIP = $param and Tag0.name = $param and neo4j.tid = Tag0.id and neo4j.mid = Message0.id and neo4j.pid = Person0.id
##########
MATCH (forum:Forum1)-[:HAS_MODERATOR]->(moderator:Person1)-[:KNOWS]->(person:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(msg:Message3)

RETURN moderator.id as moderatorid, tag.id as tagid, person.id as personid, msg.id as msgid, forum.id as forumid
**********
select Message0.content, Forum0.title, Tag0.name, neo4j.forumid, Person0.lastName, Person0.firstName, Person1.firstName, Person1.lastName
from neo4j,Tag Tag0, Forum Forum0, Person Person0, Person Person1, Message Message0
where Message0.creationDate < $param and Person1.locationIP = $param and neo4j.tagid = Tag0.id and neo4j.forumid = Forum0.id and neo4j.personid = Person0.id and neo4j.moderatorid = Person1.id and neo4j.msgid = Message0.id
##########
MATCH (person:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(msg:Message3)<-[:REPLY_OF]-(comment:Comment3)

RETURN person.id as personid, comment.id as commentid, tag.id as tagid
**********
select Person0.lastName, Person0.firstName, Comment0.content
from neo4j,Person Person0, Comment Comment0, Tag Tag0
where Person0.birthday < $param and Tag0.name = $param and neo4j.personid = Person0.id and neo4j.commentid = Comment0.id and neo4j.tagid = Tag0.id
##########
MATCH (p:Person1)-[:KNOWS]-(f:Person2)-[:HAS_INTEREST]->(t:Tag)

RETURN p.id as pid, f.id as fid, t.id as tid
**********
select Person0.firstName, neo4j.fid, Person0.lastName
from neo4j,Person Person0, Person Person1, Tag Tag0
where Tag0.name = $param and Person1.firstName = $param and neo4j.fid = Person0.id and neo4j.pid = Person1.id and neo4j.tid = Tag0.id
##########
MATCH (p1:Person1)-[:KNOWS]->(p2:Person2)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(forum:Forum1)

RETURN p1.id as p1id, p2.id as p2id, forum.id as forumid, tag.id as tagid
**********
select Person0.firstName, Forum0.title, Tag0.name, neo4j.p2id, Person1.firstName, neo4j.p1id
from neo4j,Person Person0, Person Person1, Tag Tag0, Forum Forum0
where Forum0.title CONTAINS $param and Person1.gender = $param and neo4j.p2id = Person0.id and neo4j.p1id = Person1.id and neo4j.tagid = Tag0.id and neo4j.forumid = Forum0.id
##########
MATCH (msg:Message3)-[:HAS_TAG]->(:Tag)<-[:HAS_TAG]-(related:Message3)

RETURN msg.id as msgid, related.id as relatedid
**********
select Message0.content, Message1.content
from neo4j,Message Message0, Message Message1
where Message1.browserUsed = $param and Message0.locationIP = $param and neo4j.msgid = Message0.id and neo4j.relatedid = Message1.id
##########
MATCH (p:Person1)-[:WORK_AT]->(comp:Company)-[:IS_LOCATED_IN]->(country:Country)<-[:IS_LOCATED_IN]-(msg:Message3)-[:HAS_CREATOR]->(creator:Person3)

RETURN creator.id as creatorid, msg.id as msgid, country.id as countryid
**********
select Message0.content, Person0.lastName, Person0.firstName
from neo4j,Country Country0, Message Message0, Person Person0
where Message0.creationDate < $param and Country0.name = $param and neo4j.countryid = Country0.id and neo4j.msgid = Message0.id and neo4j.creatorid = Person0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)-[:HAS_CREATOR]->(creator:Person3)

RETURN t.id as tid, m.id as mid, creator.id as creatorid, p.id as pid, f.id as fid
**********
select neo4j.creatorid, Person1.firstName, Person1.lastName, neo4j.mid, Person0.firstName, Tag0.name, neo4j.fid, Forum0.title, Message0.content, Person0.lastName, neo4j.pid
from neo4j,Forum Forum0, Tag Tag0, Person Person0, Message Message0, Person Person1
where Forum0.title = $param and Person1.email = $param and neo4j.fid = Forum0.id and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.mid = Message0.id and neo4j.creatorid = Person1.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)

RETURN t.id as tid, p.id as pid, f.id as fid, m.id as mid
**********
select neo4j.mid, Person0.firstName, Tag0.name, Forum0.title, Message0.content, Person0.lastName
from neo4j,Tag Tag0, Message Message0, Person Person0, Forum Forum0
where Forum0.title = $param and Message0.creationDate > $param and neo4j.tid = Tag0.id and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person2)-[:WORK_AT]->(c:Company), (friend)-[:HAS_INTEREST]->(t:Tag)
RETURN friend.id as friendid, c.id as cid, p.id as pid, t.id as tid
**********
select Company0.name, Person1.lastName, Person0.firstName, Person1.firstName, Tag0.name, Person0.lastName
from neo4j,Tag Tag0, Company Company0, Person Person0, Person Person1
where Company0.name = $param and neo4j.tid = Tag0.id and neo4j.cid = Company0.id and neo4j.pid = Person0.id and neo4j.friendid = Person1.id
##########
MATCH (post:Post3)-[:HAS_CREATOR]->(creator:Person2)-[:KNOWS]->(friend:Person2)

RETURN friend.id as friendid, creator.id as creatorid, post.id as postid
**********
select Person0.firstName, Person1.lastName, Person1.firstName, neo4j.postid, Person0.lastName
from neo4j,Person Person0, Person Person1, Post Post0
where Post0.creationDate > $param and Person1.speaks = $param and neo4j.creatorid = Person0.id and neo4j.friendid = Person1.id and neo4j.postid = Post0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(member:Person2)-[:LIKES]->(msg:Message3)

RETURN member.id as memberid, msg.id as msgid, f.id as fid
**********
select Message0.content, Forum0.title, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Forum Forum0, Person Person0
where Person0.locationIP = $param and Forum0.creationDate > $param and neo4j.msgid = Message0.id and neo4j.fid = Forum0.id and neo4j.memberid = Person0.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(member:Person1)-[:STUDY_AT]->(uni:University)

RETURN uni.id as uniid, member.id as memberid, f.id as fid
**********
select Person0.lastName, Person0.email, Person0.firstName
from neo4j,Forum Forum0, Person Person0, University University0
where Forum0.title = $param and University0.name = $param and neo4j.fid = Forum0.id and neo4j.memberid = Person0.id and neo4j.uniid = University0.id
##########
MATCH (m:Message3)-[:HAS_TAG]->(t:Tag)-[:HAS_TYPE]->(tc:TagClass)<-[:HAS_TYPE]-(otherTag:Tag)<-[:HAS_TAG]-(otherMessage:Message3)

RETURN t.id as tid, otherMessage.id as otherMessageid, m.id as mid
**********
select neo4j.mid, Message1.content, Tag0.name
from neo4j,Message Message0, Message Message1, Tag Tag0
where Message1.length > $param and Message0.creationDate > $param and neo4j.mid = Message0.id and neo4j.otherMessageid = Message1.id and neo4j.tid = Tag0.id
##########
MATCH (p:Person3)-[:KNOWS*2..3]-(friend:Person3)

RETURN friend.id as friendid, p.id as pid
**********
select Person0.firstName, Person1.lastName, Person0.lastName, Person1.firstName
from neo4j,Person Person0, Person Person1
where Person1.locationIP = $param and Person0.gender = $param and neo4j.friendid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (f:Forum1)-[:HAS_MEMBER]->(p:Person1)-[:HAS_INTEREST]->(t:Tag)

RETURN p.id as pid, f.id as fid, t.id as tid
**********
select Forum0.title, Person0.lastName, Tag0.name, Person0.firstName
from neo4j,Tag Tag0, Forum Forum0, Person Person0
where Forum0.title = $param and Tag0.name = $param and neo4j.tid = Tag0.id and neo4j.fid = Forum0.id and neo4j.pid = Person0.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person2)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(post:Post3)

RETURN friend.id as friendid, post.id as postid, p.id as pid, tag.id as tagid
**********
select Person0.firstName, Post0.content, Person0.lastName
from neo4j,Post Post0, Person Person0, Person Person1, Tag Tag0
where Person1.firstName = $param and Tag0.name = $param and neo4j.postid = Post0.id and neo4j.friendid = Person0.id and neo4j.pid = Person1.id and neo4j.tagid = Tag0.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)

RETURN p.id as pid, m.id as mid
**********
select neo4j.mid, Message0.content, Message0.creationDate
from neo4j,Person Person0, Message Message0
where Person0.email CONTAINS $param and Message0.creationDate < $param and neo4j.pid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person1)-[:KNOWS]->(friend:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(msg:Message3)

RETURN friend.id as friendid, tag.id as tagid, msg.id as msgid, p.id as pid
**********
select Message0.content, Tag0.name, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Tag Tag0, Person Person0, Person Person1
where Person0.birthday > $param and Person1.gender = $param and neo4j.msgid = Message0.id and neo4j.tagid = Tag0.id and neo4j.pid = Person0.id and neo4j.friendid = Person1.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)-[:IS_LOCATED_IN]->(pl:Place)

RETURN t.id as tid, pl.id as plid, p.id as pid, m.id as mid
**********
select Message0.content, Tag0.name, Person0.firstName
from neo4j,Place Place0, Message Message0, Person Person0, Tag Tag0
where Place0.name = $param and Message0.browserUsed = $param and neo4j.plid = Place0.id and neo4j.mid = Message0.id and neo4j.pid = Person0.id and neo4j.tid = Tag0.id
##########
MATCH (p1:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)-[:REPLY_OF]->(original:Post3)

RETURN m.id as mid, p1.id as p1id, original.id as originalid, t.id as tid
**********
select neo4j.originalid, neo4j.mid, Person0.firstName, Person0.lastName
from neo4j,Person Person0, Tag Tag0
where Tag0.name = $param and Person0.locationIP = $param and neo4j.p1id = Person0.id and neo4j.tid = Tag0.id
##########
MATCH (person:Person1)-[:STUDY_AT]->(university:University)-[:IS_LOCATED_IN]->(city:City)<-[:IS_LOCATED_IN]-(:Person2)-[:KNOWS]-(friend:Person1)

RETURN university.id as universityid, friend.id as friendid, person.id as personid, city.id as cityid
**********
select City0.name, University0.name, Person0.lastName, Person0.firstName, Person1.lastName, Person1.firstName
from neo4j,Person Person0, Person Person1, University University0, City City0
where University0.name = $param and Person0.gender = $param and neo4j.friendid = Person0.id and neo4j.personid = Person1.id and neo4j.universityid = University0.id and neo4j.cityid = City0.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)

RETURN t.id as tid, p.id as pid, m.id as mid
**********
select Person0.firstName, Tag0.name, Message0.content, Message0.length, Person0.lastName
from neo4j,Tag Tag0, Person Person0, Message Message0
where Message0.length > $param and Person0.speaks = $param and neo4j.tid = Tag0.id and neo4j.pid = Person0.id and neo4j.mid = Message0.id
##########
MATCH (p:Person2)-[:HAS_INTEREST]->(t:Tag)<-[:HAS_TAG]-(m:Message3)<-[:CONTAINER_OF]-(f:Forum1)

RETURN m.id as mid, p.id as pid, f.id as fid, t.id as tid
**********
select Forum0.title, Message0.content, Person0.lastName, Person0.firstName
from neo4j,Person Person0, Tag Tag0, Message Message0, Forum Forum0
where Tag0.name = $param and Person0.birthday < $param and neo4j.pid = Person0.id and neo4j.tid = Tag0.id and neo4j.mid = Message0.id and neo4j.fid = Forum0.id
##########
MATCH (p:Person2)-[:KNOWS]->(friend:Person2)-[:WORK_AT]->(company:Company)-[:IS_LOCATED_IN]->(country:Country)

RETURN friend.id as friendid, company.id as companyid, country.id as countryid, p.id as pid
**********
select Company0.name, Person1.lastName, Person0.firstName, Person1.firstName, Country0.name, Person0.lastName
from neo4j,Person Person0, Person Person1, Company Company0, Country Country0
where Country0.name = $param and Person0.gender = $param and neo4j.pid = Person0.id and neo4j.friendid = Person1.id and neo4j.companyid = Company0.id and neo4j.countryid = Country0.id
##########
MATCH (p:Person3)-[:KNOWS*2..4]-(friend:Person3)

RETURN friend.id as friendid, p.id as pid
**********
select Person0.email, Person0.firstName, Person0.lastName
from neo4j,Person Person0, Person Person1
where Person1.firstName = $param and Person0.gender = $param and neo4j.friendid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (p:Person1)-[:HAS_INTEREST]->(tag:Tag)<-[:HAS_TAG]-(msg:Message3)-[:HAS_CREATOR]->(creator:Person3)

RETURN creator.id as creatorid, msg.id as msgid, p.id as pid
**********
select Message0.content, Person0.lastName, Person0.firstName
from neo4j,Message Message0, Person Person0, Person Person1
where Person0.birthday < $param and Person1.gender = $param and neo4j.msgid = Message0.id and neo4j.creatorid = Person0.id and neo4j.pid = Person1.id
##########
MATCH (org:Organisation)<-[:WORK_AT]-(p:Person1)-[:KNOWS]->(friend:Person1)-[:HAS_INTEREST]->(t:Tag)

RETURN friend.id as friendid, org.id as orgid, p.id as pid, t.id as tid
**********
select Person1.lastName, Person0.firstName, Person1.firstName, Tag0.name, Person0.lastName
from neo4j,Tag Tag0, Organisation Organisation0, Person Person0, Person Person1
where Tag0.name = $param and Organisation0.name = $param and neo4j.tid = Tag0.id and neo4j.orgid = Organisation0.id and neo4j.pid = Person0.id and neo4j.friendid = Person1.id